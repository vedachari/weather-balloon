{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nexport const useChartInteraction = ({\n  store\n}) => {\n  const cleanInteraction = useEventCallback(function cleanInteraction() {\n    store.update(prev => {\n      return _extends({}, prev, {\n        interaction: _extends({}, prev.interaction, {\n          pointer: null,\n          item: null\n        })\n      });\n    });\n  });\n  const removeItemInteraction = useEventCallback(function removeItemInteraction(itemToRemove) {\n    store.update(prev => {\n      const prevItem = prev.interaction.item;\n      if (!itemToRemove) {\n        // Remove without taking care of the current item\n        return prevItem === null ? prev : _extends({}, prev, {\n          interaction: _extends({}, prev.interaction, {\n            item: null\n          })\n        });\n      }\n      if (prevItem === null || Object.keys(itemToRemove).some(key => itemToRemove[key] !== prevItem[key])) {\n        // The current item is already different from the one to remove. No need to clean it.\n        return prev;\n      }\n      return _extends({}, prev, {\n        interaction: _extends({}, prev.interaction, {\n          item: null\n        })\n      });\n    });\n  });\n  const setItemInteraction = useEventCallback(function setItemInteraction(newItem) {\n    store.update(prev => {\n      if (fastObjectShallowCompare(prev.interaction.item, newItem)) {\n        return prev;\n      }\n      return _extends({}, prev, {\n        interaction: _extends({}, prev.interaction, {\n          item: newItem\n        })\n      });\n    });\n  });\n  const setPointerCoordinate = useEventCallback(function setPointerCoordinate(coordinate) {\n    store.update(prev => _extends({}, prev, {\n      interaction: _extends({}, prev.interaction, {\n        pointer: coordinate,\n        lastUpdate: coordinate !== null ? 'pointer' : prev.interaction.lastUpdate\n      })\n    }));\n  });\n  return {\n    instance: {\n      cleanInteraction,\n      setItemInteraction,\n      removeItemInteraction,\n      setPointerCoordinate\n    }\n  };\n};\nuseChartInteraction.getInitialState = () => ({\n  interaction: {\n    item: null,\n    pointer: null,\n    lastUpdate: 'pointer'\n  }\n});\nuseChartInteraction.params = {};","map":{"version":3,"names":["_extends","useEventCallback","fastObjectShallowCompare","useChartInteraction","store","cleanInteraction","update","prev","interaction","pointer","item","removeItemInteraction","itemToRemove","prevItem","Object","keys","some","key","setItemInteraction","newItem","setPointerCoordinate","coordinate","lastUpdate","instance","getInitialState","params"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/plugins/featurePlugins/useChartInteraction/useChartInteraction.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nexport const useChartInteraction = ({\n  store\n}) => {\n  const cleanInteraction = useEventCallback(function cleanInteraction() {\n    store.update(prev => {\n      return _extends({}, prev, {\n        interaction: _extends({}, prev.interaction, {\n          pointer: null,\n          item: null\n        })\n      });\n    });\n  });\n  const removeItemInteraction = useEventCallback(function removeItemInteraction(itemToRemove) {\n    store.update(prev => {\n      const prevItem = prev.interaction.item;\n      if (!itemToRemove) {\n        // Remove without taking care of the current item\n        return prevItem === null ? prev : _extends({}, prev, {\n          interaction: _extends({}, prev.interaction, {\n            item: null\n          })\n        });\n      }\n      if (prevItem === null || Object.keys(itemToRemove).some(key => itemToRemove[key] !== prevItem[key])) {\n        // The current item is already different from the one to remove. No need to clean it.\n        return prev;\n      }\n      return _extends({}, prev, {\n        interaction: _extends({}, prev.interaction, {\n          item: null\n        })\n      });\n    });\n  });\n  const setItemInteraction = useEventCallback(function setItemInteraction(newItem) {\n    store.update(prev => {\n      if (fastObjectShallowCompare(prev.interaction.item, newItem)) {\n        return prev;\n      }\n      return _extends({}, prev, {\n        interaction: _extends({}, prev.interaction, {\n          item: newItem\n        })\n      });\n    });\n  });\n  const setPointerCoordinate = useEventCallback(function setPointerCoordinate(coordinate) {\n    store.update(prev => _extends({}, prev, {\n      interaction: _extends({}, prev.interaction, {\n        pointer: coordinate,\n        lastUpdate: coordinate !== null ? 'pointer' : prev.interaction.lastUpdate\n      })\n    }));\n  });\n  return {\n    instance: {\n      cleanInteraction,\n      setItemInteraction,\n      removeItemInteraction,\n      setPointerCoordinate\n    }\n  };\n};\nuseChartInteraction.getInitialState = () => ({\n  interaction: {\n    item: null,\n    pointer: null,\n    lastUpdate: 'pointer'\n  }\n});\nuseChartInteraction.params = {};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}