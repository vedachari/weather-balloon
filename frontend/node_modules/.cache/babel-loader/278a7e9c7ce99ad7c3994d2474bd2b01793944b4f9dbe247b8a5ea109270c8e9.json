{"ast":null,"code":"var _jsxFileName = \"/Users/vedachari/projects/weather-balloon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Map from './components/Map';\nimport Slider from './components/Slider';\nimport Meteo from './components/Meteo';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [rand, setRand] = useState(null);\n  const randRef = useRef(rand);\n  const [data, setData] = useState(null);\n  const [balloon, setBalloon] = useState(null);\n  const [hour, setHour] = useState(-1);\n\n  //change rand ref\n  useEffect(() => {\n    randRef.current = rand;\n  }, [rand]);\n\n  // Generate initial random number\n  useEffect(() => {\n    const r = Math.floor(Math.random() * 1000);\n    setHour(0);\n    setRand(r);\n  }, []);\n\n  // Log whenever rand changes\n  useEffect(() => {\n    console.log(\"Random index chosen:\", rand);\n  }, [rand]);\n\n  // Handler for \"New Balloon\" button\n  const handleNewBalloon = () => {\n    const r = Math.floor(Math.random() * 1000);\n    if (data) {\n      setBalloon(data[r]);\n    }\n    ;\n    setRand(r);\n  };\n\n  // Hour changed so get new balloon values\n  useEffect(() => {\n    if (randRef.current === null) {\n      console.log(\"rand not chosen\");\n      return;\n    }\n    ;\n    const fetchBalloons = async () => {\n      try {\n        console.log(\"fetching hour %d\", hour);\n        const res = await fetch(`/api/treasure/get/${hour}`);\n        if (!res.ok) throw new Error(\"Failed to fetch data\");\n        const json = await res.json();\n\n        // convert API data to {lat, lon} format\n        const mapped = json.map(b => ({\n          lat: b[0],\n          lon: b[1],\n          alt: b[2]\n        }));\n        console.log(mapped[randRef.current]);\n        setData(mapped);\n        setBalloon(mapped[randRef.current]);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchBalloons();\n  }, [hour]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewBalloon,\n        className: \"generate-button\",\n        children: \"Show New Balloon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: balloon && /*#__PURE__*/_jsxDEV(Map, {\n          lat: balloon.lat,\n          lon: balloon.lon,\n          alt: balloon.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        hour: hour,\n        setHour: setHour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Weather Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), balloon && /*#__PURE__*/_jsxDEV(Meteo, {\n        lat: balloon.lat,\n        lon: balloon.lon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Duvangz8vN92937WJ/N5BYiRrww=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Map","Slider","Meteo","jsxDEV","_jsxDEV","App","_s","rand","setRand","randRef","data","setData","balloon","setBalloon","hour","setHour","current","r","Math","floor","random","console","log","handleNewBalloon","fetchBalloons","res","fetch","ok","Error","json","mapped","map","b","lat","lon","alt","err","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vedachari/projects/weather-balloon/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Map from './components/Map';\nimport Slider from './components/Slider';\nimport Meteo from './components/Meteo';\nimport \"./App.css\";\n\ntype Balloon = {\n  lat: number;\n  lon: number;\n  alt: number;\n};\n\nconst App: React.FC = () => {\n  const [rand, setRand] = useState<number | null>(null);\n  const randRef = useRef(rand);\n  const [data, setData] = useState<Balloon[] | null> (null);\n  const [balloon, setBalloon] = useState<Balloon|null>(null);\n  const [hour, setHour] = useState< number>(-1);\n\n  //change rand ref\n  useEffect(() => {\n    randRef.current = rand;\n  }, [rand]);\n\n  // Generate initial random number\n  useEffect(() => {\n    const r = Math.floor(Math.random() * 1000);\n    setHour(0);\n    setRand(r);\n  }, []);\n\n  // Log whenever rand changes\n  useEffect(() => {\n    console.log(\"Random index chosen:\", rand);\n  }, [rand]);\n\n  // Handler for \"New Balloon\" button\n  const handleNewBalloon = () => {\n    const r = Math.floor(Math.random() * 1000);\n    if (data){\n      setBalloon(data[r]);\n    };\n    setRand(r);\n  };\n\n  // Hour changed so get new balloon values\n  useEffect(() => {\n      if (randRef.current === null){\n          console.log(\"rand not chosen\");\n          return;\n      };\n      const fetchBalloons = async () => {\n        try {\n          console.log(\"fetching hour %d\", hour);\n          const res = await fetch(`/api/treasure/get/${hour}`);\n          if (!res.ok) throw new Error(\"Failed to fetch data\");\n  \n          const json = await res.json();\n  \n          // convert API data to {lat, lon} format\n          const mapped = json.map((b: any) => ({\n            lat: b[0],\n            lon: b[1],\n            alt: b[2],\n          }));\n          console.log(mapped[randRef.current]);\n\n          setData(mapped);\n          setBalloon(mapped[randRef.current]);\n        } catch (err) {\n          console.error(err);\n        }\n      };\n  \n      fetchBalloons();\n    }, [hour]);\n\n  return (\n    <div className=\"page\">\n      {/* Button at the top */}\n      <div className=\"button\">\n        <button onClick={handleNewBalloon} className=\"generate-button\">\n          Show New Balloon\n        </button>\n      </div>\n\n      {/* Map container */}\n      <div className=\"map-container\">\n          <div className=\"map\">\n            {balloon && (<Map lat = {balloon.lat} lon = {balloon.lon} alt = {balloon.alt} />)}\n          </div>\n          \n      </div>\n      <div className=\"slider\">\n            <Slider \n              hour = {hour}\n              setHour = {setHour}/>\n          </div>\n      {/* Placeholder for other containers */}\n        <div className=\"info-container\">\n          <p>Weather Info</p>\n          {balloon && (<Meteo lat = {balloon.lat} lon = {balloon.lon}/>)}\n        </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}