{"ast":null,"code":"/**\n * Calculate the centroid (average position) of multiple pointers\n */\nexport function calculateCentroid(pointers) {\n  if (pointers.length === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  const sum = pointers.reduce((acc, pointer) => {\n    acc.x += pointer.clientX;\n    acc.y += pointer.clientY;\n    return acc;\n  }, {\n    x: 0,\n    y: 0\n  });\n  return {\n    x: sum.x / pointers.length,\n    y: sum.y / pointers.length\n  };\n}","map":{"version":3,"names":["calculateCentroid","pointers","length","x","y","sum","reduce","acc","pointer","clientX","clientY"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-internal-gestures/esm/core/utils/calculateCentroid.js"],"sourcesContent":["/**\n * Calculate the centroid (average position) of multiple pointers\n */\nexport function calculateCentroid(pointers) {\n  if (pointers.length === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  const sum = pointers.reduce((acc, pointer) => {\n    acc.x += pointer.clientX;\n    acc.y += pointer.clientY;\n    return acc;\n  }, {\n    x: 0,\n    y: 0\n  });\n  return {\n    x: sum.x / pointers.length,\n    y: sum.y / pointers.length\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,iBAAiBA,CAACC,QAAQ,EAAE;EAC1C,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;IACzB,OAAO;MACLC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACL,CAAC;EACH;EACA,MAAMC,GAAG,GAAGJ,QAAQ,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IAC5CD,GAAG,CAACJ,CAAC,IAAIK,OAAO,CAACC,OAAO;IACxBF,GAAG,CAACH,CAAC,IAAII,OAAO,CAACE,OAAO;IACxB,OAAOH,GAAG;EACZ,CAAC,EAAE;IACDJ,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE;EACL,CAAC,CAAC;EACF,OAAO;IACLD,CAAC,EAAEE,GAAG,CAACF,CAAC,GAAGF,QAAQ,CAACC,MAAM;IAC1BE,CAAC,EAAEC,GAAG,CAACD,CAAC,GAAGH,QAAQ,CAACC;EACtB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}