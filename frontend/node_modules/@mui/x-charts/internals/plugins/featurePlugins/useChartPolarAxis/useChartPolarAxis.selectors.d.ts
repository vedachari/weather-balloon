import { UseChartPolarAxisSignature } from "@mui/x-charts/internals/plugins/featurePlugins/useChartPolarAxis/useChartPolarAxis.types.js";
import { ChartState } from "@mui/x-charts/internals/plugins/models/chart.js";
export declare const selectorChartPolarAxisState: (state: ChartState<[], [UseChartPolarAxisSignature]>) => {
  rotation: import("@mui/x-charts/internals/index.js").AxisConfig<import("@mui/x-charts/internals/index.js").ScaleName, any, import("@mui/x-charts/internals/index.js").ChartsRotationAxisProps>[];
  radius: import("@mui/x-charts/internals/index.js").AxisConfig<"linear", any, import("@mui/x-charts/internals/index.js").ChartsRadiusAxisProps>[];
} | undefined;
export declare const selectorChartRawRotationAxis: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartPolarAxis/useChartPolarAxis.types.js").UseChartPolarAxisState> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
}, import("@mui/x-charts/internals/index.js").AxisConfig<keyof import("@mui/x-charts/internals/index.js").AxisScaleConfig, any, import("@mui/x-charts/internals/index.js").ChartsRotationAxisProps>[] | undefined, []>;
export declare const selectorChartRawRadiusAxis: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartPolarAxis/useChartPolarAxis.types.js").UseChartPolarAxisState> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
}, import("@mui/x-charts/internals/index.js").AxisConfig<"linear", any, import("@mui/x-charts/internals/index.js").ChartsRadiusAxisProps>[] | undefined, []>;
/**
 * The only interesting selectors that merge axis data and zoom if provided.
 */
export declare const selectorChartRotationAxis: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartPolarAxis/useChartPolarAxis.types.js").UseChartPolarAxisState> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & Partial<{}> & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartCartesianAxis/index.js").UseChartCartesianAxisState>, import("@mui/x-charts/internals/plugins/featurePlugins/useChartPolarAxis/computeAxisValue.js").ComputeResult<import("@mui/x-charts/internals/index.js").ChartsRotationAxisProps>, []>;
export declare const selectorChartRadiusAxis: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartPolarAxis/useChartPolarAxis.types.js").UseChartPolarAxisState> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & Partial<{}> & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartCartesianAxis/index.js").UseChartCartesianAxisState>, import("@mui/x-charts/internals/plugins/featurePlugins/useChartPolarAxis/computeAxisValue.js").ComputeResult<import("@mui/x-charts/internals/index.js").ChartsRadiusAxisProps>, []>;
export declare const selectorChartPolarCenter: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<{}> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartCartesianAxis/index.js").UseChartCartesianAxisState> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
}, {
  cx: number;
  cy: number;
}, []>;