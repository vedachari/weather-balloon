import { createSelector } from "../../utils/selectors.js";
import { createIsHighlighted } from "./createIsHighlighted.js";
import { createIsFaded } from "./createIsFaded.js";
import { getSeriesHighlightedItem, getSeriesUnfadedItem, isSeriesFaded, isSeriesHighlighted } from "./highlightStates.js";
import { selectorChartsKeyboardItem } from "../useChartKeyboardNavigation/index.js";
const selectHighlight = state => state.highlight;
const selectSeries = state => state.series;
export const selectorChartsHighlightScopePerSeriesId = createSelector([selectSeries], series => {
  const map = new Map();
  Object.keys(series.processedSeries).forEach(seriesType => {
    const seriesData = series.processedSeries[seriesType];
    seriesData?.seriesOrder?.forEach(seriesId => {
      const seriesItem = seriesData?.series[seriesId];
      map.set(seriesId, seriesItem?.highlightScope);
    });
  });
  return map;
});
export const selectorChartsHighlightedItem = createSelector([selectHighlight, selectorChartsKeyboardItem], function selectorChartsHighlightedItem(highlight, keyboardItem) {
  return highlight.lastUpdate === 'pointer' ? highlight.item : keyboardItem;
});
export const selectorChartsHighlightScope = createSelector([selectorChartsHighlightScopePerSeriesId, selectorChartsHighlightedItem], function selectorChartsHighlightScope(seriesIdToHighlightScope, highlightedItem) {
  if (!highlightedItem) {
    return null;
  }
  const highlightScope = seriesIdToHighlightScope.get(highlightedItem.seriesId);
  if (highlightScope === undefined) {
    return null;
  }
  return highlightScope;
});
export const selectorChartsIsHighlightedCallback = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem], createIsHighlighted);
export const selectorChartsIsFadedCallback = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem], createIsFaded);
export const selectorChartsIsHighlighted = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, item) => item], function selectorChartsIsHighlighted(highlightScope, highlightedItem, item) {
  return createIsHighlighted(highlightScope, highlightedItem)(item);
});
export const selectorChartIsSeriesHighlighted = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], isSeriesHighlighted);
export const selectorChartIsSeriesFaded = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], isSeriesFaded);
export const selectorChartSeriesUnfadedItem = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], getSeriesUnfadedItem);
export const selectorChartSeriesHighlightedItem = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], getSeriesHighlightedItem);
export const selectorChartsIsFaded = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, item) => item], function selectorChartsIsFaded(highlightScope, highlightedItem, item) {
  return createIsFaded(highlightScope, highlightedItem)(item);
});