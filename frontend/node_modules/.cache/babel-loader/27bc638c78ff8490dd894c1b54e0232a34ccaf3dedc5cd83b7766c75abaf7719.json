{"ast":null,"code":"'use client';\n\nimport { createSeriesSelectorsOfType, createAllSeriesSelectorOfType } from \"../internals/createSeriesSelectorOfType.js\";\nconst useSelectorSeries = createSeriesSelectorsOfType('radar');\nconst useSelectorSeriesContext = createAllSeriesSelectorOfType('radar');\n\n/**\n * Get access to the internal state of radar series.\n *\n * @param {SeriesId} seriesId The id of the series to get.\n * @returns {UseRadarSeriesReturnValue} the radar series\n */\n\n/**\n * Get access to the internal state of radar series.\n *\n * When called without arguments, it returns all radar series.\n *\n * @returns {UseRadarSeriesReturnValue[]} the radar series\n */\n\n/**\n * Get access to the internal state of radar series.\n *\n * @param {SeriesId[]} seriesIds The ids of the series to get. Order is preserved.\n * @returns {UseRadarSeriesReturnValue[]} the radar series\n */\n\nexport function useRadarSeries(seriesIds) {\n  return useSelectorSeries(seriesIds);\n}\n\n/**\n * Get access to the internal state of radar series.\n * The returned object contains:\n * - series: a mapping from ids to series attributes.\n * - seriesOrder: the array of series ids.\n * @returns the radar series\n */\nexport function useRadarSeriesContext() {\n  return useSelectorSeriesContext();\n}","map":{"version":3,"names":["createSeriesSelectorsOfType","createAllSeriesSelectorOfType","useSelectorSeries","useSelectorSeriesContext","useRadarSeries","seriesIds","useRadarSeriesContext"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/hooks/useRadarSeries.js"],"sourcesContent":["'use client';\n\nimport { createSeriesSelectorsOfType, createAllSeriesSelectorOfType } from \"../internals/createSeriesSelectorOfType.js\";\nconst useSelectorSeries = createSeriesSelectorsOfType('radar');\nconst useSelectorSeriesContext = createAllSeriesSelectorOfType('radar');\n\n/**\n * Get access to the internal state of radar series.\n *\n * @param {SeriesId} seriesId The id of the series to get.\n * @returns {UseRadarSeriesReturnValue} the radar series\n */\n\n/**\n * Get access to the internal state of radar series.\n *\n * When called without arguments, it returns all radar series.\n *\n * @returns {UseRadarSeriesReturnValue[]} the radar series\n */\n\n/**\n * Get access to the internal state of radar series.\n *\n * @param {SeriesId[]} seriesIds The ids of the series to get. Order is preserved.\n * @returns {UseRadarSeriesReturnValue[]} the radar series\n */\n\nexport function useRadarSeries(seriesIds) {\n  return useSelectorSeries(seriesIds);\n}\n\n/**\n * Get access to the internal state of radar series.\n * The returned object contains:\n * - series: a mapping from ids to series attributes.\n * - seriesOrder: the array of series ids.\n * @returns the radar series\n */\nexport function useRadarSeriesContext() {\n  return useSelectorSeriesContext();\n}"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,2BAA2B,EAAEC,6BAA6B,QAAQ,4CAA4C;AACvH,MAAMC,iBAAiB,GAAGF,2BAA2B,CAAC,OAAO,CAAC;AAC9D,MAAMG,wBAAwB,GAAGF,6BAA6B,CAAC,OAAO,CAAC;;AAEvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,cAAcA,CAACC,SAAS,EAAE;EACxC,OAAOH,iBAAiB,CAACG,SAAS,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,qBAAqBA,CAAA,EAAG;EACtC,OAAOH,wBAAwB,CAAC,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}