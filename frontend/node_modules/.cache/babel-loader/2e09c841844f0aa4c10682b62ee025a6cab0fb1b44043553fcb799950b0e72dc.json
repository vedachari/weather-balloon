{"ast":null,"code":"import { scaleSymlog as originalScaleSymlog, scaleLog, scaleLinear } from '@mui/x-charts-vendor/d3-scale';\nexport function scaleSymlog(_domain, _range) {\n  const scale = originalScaleSymlog(_domain, _range);\n  const originalTicks = scale.ticks;\n  const {\n    negativeScale,\n    linearScale,\n    positiveScale\n  } = generateScales(scale);\n\n  // Workaround for https://github.com/d3/d3-scale/issues/162\n  scale.ticks = count => {\n    const ticks = originalTicks(count);\n    const constant = scale.constant();\n    let negativeLogTickCount = 0;\n    let linearTickCount = 0;\n    let positiveLogTickCount = 0;\n    ticks.forEach(tick => {\n      if (tick > -constant && tick < constant) {\n        linearTickCount += 1;\n      }\n      if (tick <= -constant) {\n        negativeLogTickCount += 1;\n      }\n      if (tick >= constant) {\n        positiveLogTickCount += 1;\n      }\n    });\n    const finalTicks = [];\n    if (negativeLogTickCount > 0) {\n      finalTicks.push(...negativeScale.ticks(negativeLogTickCount));\n    }\n    if (linearTickCount > 0) {\n      const linearTicks = linearScale.ticks(linearTickCount);\n      if (finalTicks.at(-1) === linearTicks[0]) {\n        finalTicks.push(...linearTicks.slice(1));\n      } else {\n        finalTicks.push(...linearTicks);\n      }\n    }\n    if (positiveLogTickCount > 0) {\n      const positiveTicks = positiveScale.ticks(positiveLogTickCount);\n      if (finalTicks.at(-1) === positiveTicks[0]) {\n        finalTicks.push(...positiveTicks.slice(1));\n      } else {\n        finalTicks.push(...positiveTicks);\n      }\n    }\n    return finalTicks;\n  };\n  scale.tickFormat = (count = 10, specifier) => {\n    // Calculates the proportion of the domain that each scale occupies, and use that ratio to determine the number of ticks for each scale.\n    const constant = scale.constant();\n    const [start, end] = scale.domain();\n    const extent = end - start;\n    const negativeScaleDomain = negativeScale.domain();\n    const negativeScaleExtent = negativeScaleDomain[1] - negativeScaleDomain[0];\n    const negativeScaleRatio = extent === 0 ? 0 : negativeScaleExtent / extent;\n    const negativeScaleTickCount = negativeScaleRatio * count;\n    const linearScaleDomain = linearScale.domain();\n    const linearScaleExtent = linearScaleDomain[1] - linearScaleDomain[0];\n    const linearScaleRatio = extent === 0 ? 0 : linearScaleExtent / extent;\n    const linearScaleTickCount = linearScaleRatio * count;\n    const positiveScaleDomain = positiveScale.domain();\n    const positiveScaleExtent = positiveScaleDomain[1] - positiveScaleDomain[0];\n    const positiveScaleRatio = extent === 0 ? 0 : positiveScaleExtent / extent;\n    const positiveScaleTickCount = positiveScaleRatio * count;\n    const negativeTickFormat = negativeScale.tickFormat(negativeScaleTickCount, specifier);\n    const linearTickFormat = linearScale.tickFormat(linearScaleTickCount, specifier);\n    const positiveTickFormat = positiveScale.tickFormat(positiveScaleTickCount, specifier);\n    return tick => {\n      const tickFormat =\n      // eslint-disable-next-line no-nested-ternary\n      tick.valueOf() <= -constant ? negativeTickFormat : tick.valueOf() >= constant ? positiveTickFormat : linearTickFormat;\n      return tickFormat(tick);\n    };\n  };\n\n  /* Adaptation of https://github.com/d3/d3-scale/blob/d6904a4bde09e16005e0ad8ca3e25b10ce54fa0d/src/symlog.js#L30 */\n  scale.copy = () => {\n    return scaleSymlog(scale.domain(), scale.range()).constant(scale.constant());\n  };\n  return scale;\n}\nfunction generateScales(scale) {\n  const constant = scale.constant();\n  const domain = scale.domain();\n  const negativeDomain = [domain[0], Math.min(domain[1], -constant)];\n  const negativeLogScale = scaleLog(negativeDomain, scale.range());\n  const linearDomain = [Math.max(domain[0], -constant), Math.min(domain[1], constant)];\n  const linearScale = scaleLinear(linearDomain, scale.range());\n  const positiveDomain = [Math.max(domain[0], constant), domain[1]];\n  const positiveLogScale = scaleLog(positiveDomain, scale.range());\n  return {\n    negativeScale: negativeLogScale,\n    linearScale,\n    positiveScale: positiveLogScale\n  };\n}","map":{"version":3,"names":["scaleSymlog","originalScaleSymlog","scaleLog","scaleLinear","_domain","_range","scale","originalTicks","ticks","negativeScale","linearScale","positiveScale","generateScales","count","constant","negativeLogTickCount","linearTickCount","positiveLogTickCount","forEach","tick","finalTicks","push","linearTicks","at","slice","positiveTicks","tickFormat","specifier","start","end","domain","extent","negativeScaleDomain","negativeScaleExtent","negativeScaleRatio","negativeScaleTickCount","linearScaleDomain","linearScaleExtent","linearScaleRatio","linearScaleTickCount","positiveScaleDomain","positiveScaleExtent","positiveScaleRatio","positiveScaleTickCount","negativeTickFormat","linearTickFormat","positiveTickFormat","valueOf","copy","range","negativeDomain","Math","min","negativeLogScale","linearDomain","max","positiveDomain","positiveLogScale"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/symlogScale.js"],"sourcesContent":["import { scaleSymlog as originalScaleSymlog, scaleLog, scaleLinear } from '@mui/x-charts-vendor/d3-scale';\nexport function scaleSymlog(_domain, _range) {\n  const scale = originalScaleSymlog(_domain, _range);\n  const originalTicks = scale.ticks;\n  const {\n    negativeScale,\n    linearScale,\n    positiveScale\n  } = generateScales(scale);\n\n  // Workaround for https://github.com/d3/d3-scale/issues/162\n  scale.ticks = count => {\n    const ticks = originalTicks(count);\n    const constant = scale.constant();\n    let negativeLogTickCount = 0;\n    let linearTickCount = 0;\n    let positiveLogTickCount = 0;\n    ticks.forEach(tick => {\n      if (tick > -constant && tick < constant) {\n        linearTickCount += 1;\n      }\n      if (tick <= -constant) {\n        negativeLogTickCount += 1;\n      }\n      if (tick >= constant) {\n        positiveLogTickCount += 1;\n      }\n    });\n    const finalTicks = [];\n    if (negativeLogTickCount > 0) {\n      finalTicks.push(...negativeScale.ticks(negativeLogTickCount));\n    }\n    if (linearTickCount > 0) {\n      const linearTicks = linearScale.ticks(linearTickCount);\n      if (finalTicks.at(-1) === linearTicks[0]) {\n        finalTicks.push(...linearTicks.slice(1));\n      } else {\n        finalTicks.push(...linearTicks);\n      }\n    }\n    if (positiveLogTickCount > 0) {\n      const positiveTicks = positiveScale.ticks(positiveLogTickCount);\n      if (finalTicks.at(-1) === positiveTicks[0]) {\n        finalTicks.push(...positiveTicks.slice(1));\n      } else {\n        finalTicks.push(...positiveTicks);\n      }\n    }\n    return finalTicks;\n  };\n  scale.tickFormat = (count = 10, specifier) => {\n    // Calculates the proportion of the domain that each scale occupies, and use that ratio to determine the number of ticks for each scale.\n    const constant = scale.constant();\n    const [start, end] = scale.domain();\n    const extent = end - start;\n    const negativeScaleDomain = negativeScale.domain();\n    const negativeScaleExtent = negativeScaleDomain[1] - negativeScaleDomain[0];\n    const negativeScaleRatio = extent === 0 ? 0 : negativeScaleExtent / extent;\n    const negativeScaleTickCount = negativeScaleRatio * count;\n    const linearScaleDomain = linearScale.domain();\n    const linearScaleExtent = linearScaleDomain[1] - linearScaleDomain[0];\n    const linearScaleRatio = extent === 0 ? 0 : linearScaleExtent / extent;\n    const linearScaleTickCount = linearScaleRatio * count;\n    const positiveScaleDomain = positiveScale.domain();\n    const positiveScaleExtent = positiveScaleDomain[1] - positiveScaleDomain[0];\n    const positiveScaleRatio = extent === 0 ? 0 : positiveScaleExtent / extent;\n    const positiveScaleTickCount = positiveScaleRatio * count;\n    const negativeTickFormat = negativeScale.tickFormat(negativeScaleTickCount, specifier);\n    const linearTickFormat = linearScale.tickFormat(linearScaleTickCount, specifier);\n    const positiveTickFormat = positiveScale.tickFormat(positiveScaleTickCount, specifier);\n    return tick => {\n      const tickFormat =\n      // eslint-disable-next-line no-nested-ternary\n      tick.valueOf() <= -constant ? negativeTickFormat : tick.valueOf() >= constant ? positiveTickFormat : linearTickFormat;\n      return tickFormat(tick);\n    };\n  };\n\n  /* Adaptation of https://github.com/d3/d3-scale/blob/d6904a4bde09e16005e0ad8ca3e25b10ce54fa0d/src/symlog.js#L30 */\n  scale.copy = () => {\n    return scaleSymlog(scale.domain(), scale.range()).constant(scale.constant());\n  };\n  return scale;\n}\nfunction generateScales(scale) {\n  const constant = scale.constant();\n  const domain = scale.domain();\n  const negativeDomain = [domain[0], Math.min(domain[1], -constant)];\n  const negativeLogScale = scaleLog(negativeDomain, scale.range());\n  const linearDomain = [Math.max(domain[0], -constant), Math.min(domain[1], constant)];\n  const linearScale = scaleLinear(linearDomain, scale.range());\n  const positiveDomain = [Math.max(domain[0], constant), domain[1]];\n  const positiveLogScale = scaleLog(positiveDomain, scale.range());\n  return {\n    negativeScale: negativeLogScale,\n    linearScale,\n    positiveScale: positiveLogScale\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}