import { SeriesId } from "@mui/x-charts/models/seriesType/common.js";
import { HighlightItemData } from "@mui/x-charts/internals/plugins/featurePlugins/useChartHighlight/useChartHighlight.types.js";
import { HighlightScope } from "@mui/x-charts/internals/plugins/featurePlugins/useChartHighlight/highlightConfig.types.js";
export declare const selectorChartsHighlightScopePerSeriesId: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<{}> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
}, Map<SeriesId, Partial<HighlightScope> | undefined>, any[]>;
export declare const selectorChartsHighlightedItem: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & import("@mui/x-charts/internals/plugins/featurePlugins/useChartHighlight/useChartHighlight.types.js").UseChartHighlightState & Partial<{}> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartKeyboardNavigation/useChartKeyboardNavigation.types.js").UseChartKeyboardNavigationState> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
}, HighlightItemData | null, any[]>;
export declare const selectorChartsHighlightScope: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<{}> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & import("@mui/x-charts/internals/plugins/featurePlugins/useChartHighlight/useChartHighlight.types.js").UseChartHighlightState & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartKeyboardNavigation/useChartKeyboardNavigation.types.js").UseChartKeyboardNavigationState>, Partial<HighlightScope> | null, any[]>;
export declare const selectorChartsIsHighlightedCallback: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<{}> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & import("@mui/x-charts/internals/plugins/featurePlugins/useChartHighlight/useChartHighlight.types.js").UseChartHighlightState & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartKeyboardNavigation/useChartKeyboardNavigation.types.js").UseChartKeyboardNavigationState>, (item: HighlightItemData | null) => boolean, any[]>;
export declare const selectorChartsIsFadedCallback: import("reselect").Selector<import("@mui/x-charts/internals/plugins/corePlugins/useChartId/useChartId.types.js").UseChartIdState & import("@mui/x-charts/internals/plugins/corePlugins/useChartExperimentalFeature/useChartExperimentalFeature.types.js").UseChartExperimentalFeaturesState & import("@mui/x-charts/internals/plugins/corePlugins/useChartDimensions/useChartDimensions.types.js").UseChartDimensionsState & import("@mui/x-charts/internals/plugins/corePlugins/useChartSeries/useChartSeries.types.js").UseChartSeriesState<keyof import("@mui/x-charts/internals/index.js").ChartsSeriesConfig> & import("@mui/x-charts/internals/plugins/corePlugins/useChartAnimation/useChartAnimation.types.js").UseChartAnimationState & import("@mui/x-charts/internals/index.js").UseChartInteractionListenerState & Partial<{}> & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & {
  cacheKey: import("@mui/x-charts/internals/plugins/models/index.js").ChartStateCacheKey;
} & import("@mui/x-charts/internals/plugins/featurePlugins/useChartHighlight/useChartHighlight.types.js").UseChartHighlightState & Partial<import("@mui/x-charts/internals/plugins/featurePlugins/useChartKeyboardNavigation/useChartKeyboardNavigation.types.js").UseChartKeyboardNavigationState>, (item: HighlightItemData | null) => boolean, any[]>;
export declare const selectorChartsIsHighlighted: import("reselect").Selector<any, boolean, [item: HighlightItemData | null]>;
export declare const selectorChartIsSeriesHighlighted: import("reselect").Selector<any, boolean, [seriesId: SeriesId]>;
export declare const selectorChartIsSeriesFaded: import("reselect").Selector<any, boolean, [seriesId: SeriesId]>;
export declare const selectorChartSeriesUnfadedItem: import("reselect").Selector<any, number | null | undefined, [seriesId: SeriesId]>;
export declare const selectorChartSeriesHighlightedItem: import("reselect").Selector<any, number | null | undefined, [seriesId: SeriesId]>;
export declare const selectorChartsIsFaded: import("reselect").Selector<any, boolean, [item: HighlightItemData | null]>;