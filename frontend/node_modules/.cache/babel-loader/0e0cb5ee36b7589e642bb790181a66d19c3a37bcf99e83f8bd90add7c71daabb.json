{"ast":null,"code":"import { getScale } from \"../../../getScale.js\";\nimport { getAxisDomainLimit } from \"./getAxisDomainLimit.js\";\nimport { getTickNumber } from \"../../../ticks.js\";\nfunction niceDomain(scaleType, domain, tickNumber) {\n  return getScale(scaleType ?? 'linear', domain, [0, 1]).nice(tickNumber).domain();\n}\n\n/**\n * Calculates the initial domain and tick number for a given axis.\n * The domain should still run through the zoom filterMode after this step.\n */\nexport function calculateInitialDomainAndTickNumber(axis, axisDirection, axisIndex, formattedSeries, [minData, maxData], defaultTickNumber, preferStrictDomainInLineCharts) {\n  const domainLimit = getDomainLimit(axis, axisDirection, axisIndex, formattedSeries, preferStrictDomainInLineCharts);\n  let axisExtrema = getActualAxisExtrema(axis, minData, maxData);\n  if (typeof domainLimit === 'function') {\n    const {\n      min,\n      max\n    } = domainLimit(minData.valueOf(), maxData.valueOf());\n    axisExtrema[0] = min;\n    axisExtrema[1] = max;\n  }\n  const tickNumber = getTickNumber(axis, axisExtrema, defaultTickNumber);\n  if (domainLimit === 'nice') {\n    axisExtrema = niceDomain(axis.scaleType, axisExtrema, tickNumber);\n  }\n  axisExtrema = ['min' in axis ? axis.min ?? axisExtrema[0] : axisExtrema[0], 'max' in axis ? axis.max ?? axisExtrema[1] : axisExtrema[1]];\n  return {\n    domain: axisExtrema,\n    tickNumber\n  };\n}\n\n/**\n * Calculates the final domain for an axis.\n * After this step, the domain can be used to create the axis scale.\n */\nexport function calculateFinalDomain(axis, axisDirection, axisIndex, formattedSeries, [minData, maxData], tickNumber, preferStrictDomainInLineCharts) {\n  const domainLimit = getDomainLimit(axis, axisDirection, axisIndex, formattedSeries, preferStrictDomainInLineCharts);\n  let axisExtrema = getActualAxisExtrema(axis, minData, maxData);\n  if (typeof domainLimit === 'function') {\n    const {\n      min,\n      max\n    } = domainLimit(minData.valueOf(), maxData.valueOf());\n    axisExtrema[0] = min;\n    axisExtrema[1] = max;\n  }\n  if (domainLimit === 'nice') {\n    axisExtrema = niceDomain(axis.scaleType, axisExtrema, tickNumber);\n  }\n  return [axis.min ?? axisExtrema[0], axis.max ?? axisExtrema[1]];\n}\nfunction getDomainLimit(axis, axisDirection, axisIndex, formattedSeries, preferStrictDomainInLineCharts) {\n  return preferStrictDomainInLineCharts ? getAxisDomainLimit(axis, axisDirection, axisIndex, formattedSeries) : axis.domainLimit ?? 'nice';\n}\n\n/**\n * Get the actual axis extrema considering the user defined min and max values.\n * @param axisExtrema User defined axis extrema.\n * @param minData Minimum value from the data.\n * @param maxData Maximum value from the data.\n */\nfunction getActualAxisExtrema(axisExtrema, minData, maxData) {\n  let min = minData;\n  let max = maxData;\n  if ('max' in axisExtrema && axisExtrema.max != null && axisExtrema.max < minData) {\n    min = axisExtrema.max;\n  }\n  if ('min' in axisExtrema && axisExtrema.min != null && axisExtrema.min > minData) {\n    max = axisExtrema.min;\n  }\n  if (!('min' in axisExtrema) && !('max' in axisExtrema)) {\n    return [min, max];\n  }\n  return [axisExtrema.min ?? min, axisExtrema.max ?? max];\n}","map":{"version":3,"names":["getScale","getAxisDomainLimit","getTickNumber","niceDomain","scaleType","domain","tickNumber","nice","calculateInitialDomainAndTickNumber","axis","axisDirection","axisIndex","formattedSeries","minData","maxData","defaultTickNumber","preferStrictDomainInLineCharts","domainLimit","getDomainLimit","axisExtrema","getActualAxisExtrema","min","max","valueOf","calculateFinalDomain"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/plugins/featurePlugins/useChartCartesianAxis/domain.js"],"sourcesContent":["import { getScale } from \"../../../getScale.js\";\nimport { getAxisDomainLimit } from \"./getAxisDomainLimit.js\";\nimport { getTickNumber } from \"../../../ticks.js\";\nfunction niceDomain(scaleType, domain, tickNumber) {\n  return getScale(scaleType ?? 'linear', domain, [0, 1]).nice(tickNumber).domain();\n}\n\n/**\n * Calculates the initial domain and tick number for a given axis.\n * The domain should still run through the zoom filterMode after this step.\n */\nexport function calculateInitialDomainAndTickNumber(axis, axisDirection, axisIndex, formattedSeries, [minData, maxData], defaultTickNumber, preferStrictDomainInLineCharts) {\n  const domainLimit = getDomainLimit(axis, axisDirection, axisIndex, formattedSeries, preferStrictDomainInLineCharts);\n  let axisExtrema = getActualAxisExtrema(axis, minData, maxData);\n  if (typeof domainLimit === 'function') {\n    const {\n      min,\n      max\n    } = domainLimit(minData.valueOf(), maxData.valueOf());\n    axisExtrema[0] = min;\n    axisExtrema[1] = max;\n  }\n  const tickNumber = getTickNumber(axis, axisExtrema, defaultTickNumber);\n  if (domainLimit === 'nice') {\n    axisExtrema = niceDomain(axis.scaleType, axisExtrema, tickNumber);\n  }\n  axisExtrema = ['min' in axis ? axis.min ?? axisExtrema[0] : axisExtrema[0], 'max' in axis ? axis.max ?? axisExtrema[1] : axisExtrema[1]];\n  return {\n    domain: axisExtrema,\n    tickNumber\n  };\n}\n\n/**\n * Calculates the final domain for an axis.\n * After this step, the domain can be used to create the axis scale.\n */\nexport function calculateFinalDomain(axis, axisDirection, axisIndex, formattedSeries, [minData, maxData], tickNumber, preferStrictDomainInLineCharts) {\n  const domainLimit = getDomainLimit(axis, axisDirection, axisIndex, formattedSeries, preferStrictDomainInLineCharts);\n  let axisExtrema = getActualAxisExtrema(axis, minData, maxData);\n  if (typeof domainLimit === 'function') {\n    const {\n      min,\n      max\n    } = domainLimit(minData.valueOf(), maxData.valueOf());\n    axisExtrema[0] = min;\n    axisExtrema[1] = max;\n  }\n  if (domainLimit === 'nice') {\n    axisExtrema = niceDomain(axis.scaleType, axisExtrema, tickNumber);\n  }\n  return [axis.min ?? axisExtrema[0], axis.max ?? axisExtrema[1]];\n}\nfunction getDomainLimit(axis, axisDirection, axisIndex, formattedSeries, preferStrictDomainInLineCharts) {\n  return preferStrictDomainInLineCharts ? getAxisDomainLimit(axis, axisDirection, axisIndex, formattedSeries) : axis.domainLimit ?? 'nice';\n}\n\n/**\n * Get the actual axis extrema considering the user defined min and max values.\n * @param axisExtrema User defined axis extrema.\n * @param minData Minimum value from the data.\n * @param maxData Maximum value from the data.\n */\nfunction getActualAxisExtrema(axisExtrema, minData, maxData) {\n  let min = minData;\n  let max = maxData;\n  if ('max' in axisExtrema && axisExtrema.max != null && axisExtrema.max < minData) {\n    min = axisExtrema.max;\n  }\n  if ('min' in axisExtrema && axisExtrema.min != null && axisExtrema.min > minData) {\n    max = axisExtrema.min;\n  }\n  if (!('min' in axisExtrema) && !('max' in axisExtrema)) {\n    return [min, max];\n  }\n  return [axisExtrema.min ?? min, axisExtrema.max ?? max];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}