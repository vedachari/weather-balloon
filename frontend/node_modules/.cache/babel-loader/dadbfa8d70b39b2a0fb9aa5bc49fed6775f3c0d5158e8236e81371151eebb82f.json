{"ast":null,"code":"var _jsxFileName = \"/Users/vedachari/projects/weather-balloon/src/components/Meteo.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTimezone = tz => {\n  if (tz.startsWith(\"Etc/GMT\")) {\n    const num = parseInt(tz.replace(\"Etc/GMT\", \"\"), 10);\n    return num > 0 ? `GMT-${num}` : `GMT+${Math.abs(num)}`;\n  }\n  return tz;\n};\nconst Meteo = ({\n  weatherData,\n  hour,\n  alt\n}) => {\n  var _weatherData$hourly$t, _weatherData$hourly$p, _weatherData$hourly$r;\n  if (!weatherData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" Loading weather data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [hour === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Balloon is here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 24\n    }, this), hour > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Balloon was here \", hour, \" hours ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Coordinates: \", weatherData.latitude.toFixed(2), \"\\xB0,\", \" \", weatherData.longitude.toFixed(2), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Altitude: \", alt, \" m\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Elevation: \", weatherData.elevation, \" m\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Zone: \", formatTimezone(weatherData.timezone), \" (\", weatherData.timezone_abbreviation, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"UTC offset: \", weatherData.utcOffsetSeconds / 3600, \":00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", (_weatherData$hourly$t = weatherData.hourly.temperature_2m) === null || _weatherData$hourly$t === void 0 ? void 0 : _weatherData$hourly$t[23 - hour], \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Chance of Precipitation: \", (_weatherData$hourly$p = weatherData.hourly.precipitation_probability) === null || _weatherData$hourly$p === void 0 ? void 0 : _weatherData$hourly$p[23 - hour], \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Relative Humidity: \", (_weatherData$hourly$r = weatherData.hourly.relative_humidity_2m) === null || _weatherData$hourly$r === void 0 ? void 0 : _weatherData$hourly$r[23 - hour], \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Meteo;\nexport default Meteo;\nvar _c;\n$RefreshReg$(_c, \"Meteo\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","formatTimezone","tz","startsWith","num","parseInt","replace","Math","abs","Meteo","weatherData","hour","alt","_weatherData$hourly$t","_weatherData$hourly$p","_weatherData$hourly$r","children","fileName","_jsxFileName","lineNumber","columnNumber","latitude","toFixed","longitude","elevation","timezone","timezone_abbreviation","utcOffsetSeconds","hourly","temperature_2m","precipitation_probability","relative_humidity_2m","_c","$RefreshReg$"],"sources":["/Users/vedachari/projects/weather-balloon/src/components/Meteo.tsx"],"sourcesContent":["import React from 'react';\n\ntype MeteoProps = {\n    weatherData: any;\n    hour: number;\n    alt: number;\n}\n\nconst formatTimezone = (tz: string) => {\n  if (tz.startsWith(\"Etc/GMT\")) {\n    const num = parseInt(tz.replace(\"Etc/GMT\", \"\"), 10);\n    return num > 0 ? `GMT-${num}` : `GMT+${Math.abs(num)}`;\n  }\n  return tz;\n};\n\nconst Meteo: React.FC<MeteoProps> = ({weatherData, hour, alt}) => {\n\n    if(!weatherData) return <p> Loading weather data</p>\n    return (\n    <div>\n        {hour===0 &&  (<h3>Balloon is here</h3>)}\n        {hour > 0 && (<h3>Balloon was here {hour } hours ago</h3>)}\n      <p>\n        Coordinates: {weatherData.latitude.toFixed(2)}°,{\" \"}\n        {weatherData.longitude.toFixed(2)}°\n      </p>\n      <p>Altitude: {alt} m</p>\n      <p>Elevation: {weatherData.elevation} m</p>\n      <p>Time Zone: {formatTimezone(weatherData.timezone)} ({weatherData.timezone_abbreviation})</p>\n      <p>UTC offset: {weatherData.utcOffsetSeconds / 3600}:00</p>\n      <p>Temperature: {weatherData.hourly.temperature_2m?.[23-hour]} °C</p>\n      <p>Chance of Precipitation: {weatherData.hourly.precipitation_probability?.[23-hour]}%</p>\n      <p>Relative Humidity: {weatherData.hourly.relative_humidity_2m?.[23-hour]}%</p>\n    </div>\n  );\n}\n\nexport default Meteo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}