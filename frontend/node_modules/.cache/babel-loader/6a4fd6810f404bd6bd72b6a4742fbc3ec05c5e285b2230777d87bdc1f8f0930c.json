{"ast":null,"code":"'use client';\n\nimport { useSelector } from \"../internals/store/useSelector.js\";\nimport { useStore } from \"../internals/store/useStore.js\";\nimport { selectorChartsIsFadedCallback, selectorChartsIsHighlightedCallback } from \"../internals/plugins/featurePlugins/useChartHighlight/useChartHighlight.selectors.js\";\n\n/**\n * A hook to check the highlighted state of multiple items.\n * If you're interested by a single one, consider using `useItemHighlighted`.\n *\n * Warning: highlighted and faded can both be true at the same time.\n * We recommend to first test if item is highlighted: `const faded = !highlighted && isFaded(item)`\n * @returns {{ isHighlighted, isFaded }} callbacks to get the state of the item.\n */\nexport function useItemHighlightedGetter() {\n  const store = useStore();\n  const isHighlighted = useSelector(store, selectorChartsIsHighlightedCallback);\n  const isFaded = useSelector(store, selectorChartsIsFadedCallback);\n  return {\n    isHighlighted,\n    isFaded\n  };\n}","map":{"version":3,"names":["useSelector","useStore","selectorChartsIsFadedCallback","selectorChartsIsHighlightedCallback","useItemHighlightedGetter","store","isHighlighted","isFaded"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/hooks/useItemHighlightedGetter.js"],"sourcesContent":["'use client';\n\nimport { useSelector } from \"../internals/store/useSelector.js\";\nimport { useStore } from \"../internals/store/useStore.js\";\nimport { selectorChartsIsFadedCallback, selectorChartsIsHighlightedCallback } from \"../internals/plugins/featurePlugins/useChartHighlight/useChartHighlight.selectors.js\";\n\n/**\n * A hook to check the highlighted state of multiple items.\n * If you're interested by a single one, consider using `useItemHighlighted`.\n *\n * Warning: highlighted and faded can both be true at the same time.\n * We recommend to first test if item is highlighted: `const faded = !highlighted && isFaded(item)`\n * @returns {{ isHighlighted, isFaded }} callbacks to get the state of the item.\n */\nexport function useItemHighlightedGetter() {\n  const store = useStore();\n  const isHighlighted = useSelector(store, selectorChartsIsHighlightedCallback);\n  const isFaded = useSelector(store, selectorChartsIsFadedCallback);\n  return {\n    isHighlighted,\n    isFaded\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,6BAA6B,EAAEC,mCAAmC,QAAQ,sFAAsF;;AAEzK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwBA,CAAA,EAAG;EACzC,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,MAAMK,aAAa,GAAGN,WAAW,CAACK,KAAK,EAAEF,mCAAmC,CAAC;EAC7E,MAAMI,OAAO,GAAGP,WAAW,CAACK,KAAK,EAAEH,6BAA6B,CAAC;EACjE,OAAO;IACLI,aAAa;IACbC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}