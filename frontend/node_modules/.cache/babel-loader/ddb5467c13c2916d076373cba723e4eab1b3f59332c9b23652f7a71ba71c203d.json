{"ast":null,"code":"import { scaleBand, scalePoint } from '@mui/x-charts-vendor/d3-scale';\nimport { isBandScaleConfig, isPointScaleConfig, isSymlogScaleConfig } from \"../../../../models/axis.js\";\nimport { getScale } from \"../../../getScale.js\";\nconst DEFAULT_CATEGORY_GAP_RATIO = 0.2;\nexport function getRange(drawingArea, axisDirection, axis) {\n  const range = axisDirection === 'x' ? [drawingArea.left, drawingArea.left + drawingArea.width] : [drawingArea.top + drawingArea.height, drawingArea.top];\n  return axis.reverse ? [range[1], range[0]] : range;\n}\nexport function getNormalizedAxisScale(axis, domain) {\n  const range = [0, 1];\n  if (isBandScaleConfig(axis)) {\n    const categoryGapRatio = axis.categoryGapRatio ?? DEFAULT_CATEGORY_GAP_RATIO;\n    return scaleBand(domain, range).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2);\n  }\n  if (isPointScaleConfig(axis)) {\n    return scalePoint(domain, range);\n  }\n  const scaleType = axis.scaleType ?? 'linear';\n  const scale = getScale(scaleType, domain, range);\n  if (isSymlogScaleConfig(axis) && axis.constant != null) {\n    scale.constant(axis.constant);\n  }\n  return scale;\n}","map":{"version":3,"names":["scaleBand","scalePoint","isBandScaleConfig","isPointScaleConfig","isSymlogScaleConfig","getScale","DEFAULT_CATEGORY_GAP_RATIO","getRange","drawingArea","axisDirection","axis","range","left","width","top","height","reverse","getNormalizedAxisScale","domain","categoryGapRatio","paddingInner","paddingOuter","scaleType","scale","constant"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/plugins/featurePlugins/useChartCartesianAxis/getAxisScale.js"],"sourcesContent":["import { scaleBand, scalePoint } from '@mui/x-charts-vendor/d3-scale';\nimport { isBandScaleConfig, isPointScaleConfig, isSymlogScaleConfig } from \"../../../../models/axis.js\";\nimport { getScale } from \"../../../getScale.js\";\nconst DEFAULT_CATEGORY_GAP_RATIO = 0.2;\nexport function getRange(drawingArea, axisDirection, axis) {\n  const range = axisDirection === 'x' ? [drawingArea.left, drawingArea.left + drawingArea.width] : [drawingArea.top + drawingArea.height, drawingArea.top];\n  return axis.reverse ? [range[1], range[0]] : range;\n}\nexport function getNormalizedAxisScale(axis, domain) {\n  const range = [0, 1];\n  if (isBandScaleConfig(axis)) {\n    const categoryGapRatio = axis.categoryGapRatio ?? DEFAULT_CATEGORY_GAP_RATIO;\n    return scaleBand(domain, range).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2);\n  }\n  if (isPointScaleConfig(axis)) {\n    return scalePoint(domain, range);\n  }\n  const scaleType = axis.scaleType ?? 'linear';\n  const scale = getScale(scaleType, domain, range);\n  if (isSymlogScaleConfig(axis) && axis.constant != null) {\n    scale.constant(axis.constant);\n  }\n  return scale;\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,+BAA+B;AACrE,SAASC,iBAAiB,EAAEC,kBAAkB,EAAEC,mBAAmB,QAAQ,4BAA4B;AACvG,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,MAAMC,0BAA0B,GAAG,GAAG;AACtC,OAAO,SAASC,QAAQA,CAACC,WAAW,EAAEC,aAAa,EAAEC,IAAI,EAAE;EACzD,MAAMC,KAAK,GAAGF,aAAa,KAAK,GAAG,GAAG,CAACD,WAAW,CAACI,IAAI,EAAEJ,WAAW,CAACI,IAAI,GAAGJ,WAAW,CAACK,KAAK,CAAC,GAAG,CAACL,WAAW,CAACM,GAAG,GAAGN,WAAW,CAACO,MAAM,EAAEP,WAAW,CAACM,GAAG,CAAC;EACxJ,OAAOJ,IAAI,CAACM,OAAO,GAAG,CAACL,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK;AACpD;AACA,OAAO,SAASM,sBAAsBA,CAACP,IAAI,EAAEQ,MAAM,EAAE;EACnD,MAAMP,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACpB,IAAIT,iBAAiB,CAACQ,IAAI,CAAC,EAAE;IAC3B,MAAMS,gBAAgB,GAAGT,IAAI,CAACS,gBAAgB,IAAIb,0BAA0B;IAC5E,OAAON,SAAS,CAACkB,MAAM,EAAEP,KAAK,CAAC,CAACS,YAAY,CAACD,gBAAgB,CAAC,CAACE,YAAY,CAACF,gBAAgB,GAAG,CAAC,CAAC;EACnG;EACA,IAAIhB,kBAAkB,CAACO,IAAI,CAAC,EAAE;IAC5B,OAAOT,UAAU,CAACiB,MAAM,EAAEP,KAAK,CAAC;EAClC;EACA,MAAMW,SAAS,GAAGZ,IAAI,CAACY,SAAS,IAAI,QAAQ;EAC5C,MAAMC,KAAK,GAAGlB,QAAQ,CAACiB,SAAS,EAAEJ,MAAM,EAAEP,KAAK,CAAC;EAChD,IAAIP,mBAAmB,CAACM,IAAI,CAAC,IAAIA,IAAI,CAACc,QAAQ,IAAI,IAAI,EAAE;IACtDD,KAAK,CAACC,QAAQ,CAACd,IAAI,CAACc,QAAQ,CAAC;EAC/B;EACA,OAAOD,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}