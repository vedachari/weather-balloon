{"ast":null,"code":"var _jsxFileName = \"/Users/vedachari/projects/weather-balloon/src/components/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BalloonMap from \"./BalloonMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  rand,\n  file = \"00\"\n}) => {\n  _s();\n  const [balloons, setBalloons] = useState(null);\n  //   useEffect(() => {\n  //     if (rand === null) return; // don’t fetch until rand is set\n  //     fetchBalloons();\n  //     }, [rand]);\n\n  useEffect(() => {\n    if (rand === null) {\n      console.log(\"rand not chosen\");\n      return;\n    }\n    ;\n    const fetchBalloons = async () => {\n      try {\n        const res = await fetch(`/api/treasure/get/${file}`);\n        if (!res.ok) throw new Error(\"Failed to fetch data\");\n        const json = await res.json();\n\n        // convert API data to {lat, lon} format\n        const mapped = json.map(b => ({\n          lat: b[0],\n          lon: b[1],\n          alt: b[2]\n        }));\n        console.log(mapped[rand]);\n        setBalloons(mapped[rand]);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    // only fetch if rand is set\n    if (rand !== null) {\n      console.log(rand);\n      fetchBalloons();\n    }\n    ;\n  }, [rand]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BalloonMap, {\n      balloons: balloons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"3gbFzi92AoELRMpGokYJzhp286U=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","BalloonMap","jsxDEV","_jsxDEV","Map","rand","file","_s","balloons","setBalloons","console","log","fetchBalloons","res","fetch","ok","Error","json","mapped","map","b","lat","lon","alt","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vedachari/projects/weather-balloon/src/components/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BalloonMap from \"./BalloonMap\";\n\ntype MapProps = {\n  rand: number | null;\n  file?: string; // optional file name override, defaults to '00'\n};\n\ntype Balloon = {\n  lat: number;\n  lon: number;\n  alt: number;\n};\n\nconst Map: React.FC<MapProps> = ({rand, file = \"00\"}) => {\n  const [balloons, setBalloons] = useState<Balloon|null>(null);\n//   useEffect(() => {\n//     if (rand === null) return; // don’t fetch until rand is set\n//     fetchBalloons();\n//     }, [rand]);\n\n  useEffect(() => {\n    if (rand === null){\n        console.log(\"rand not chosen\");\n        return;\n    };\n    const fetchBalloons = async () => {\n      try {\n        const res = await fetch(`/api/treasure/get/${file}`);\n        if (!res.ok) throw new Error(\"Failed to fetch data\");\n\n        const json = await res.json();\n\n        // convert API data to {lat, lon} format\n        const mapped = json.map((b: any) => ({\n          lat: b[0],\n          lon: b[1],\n          alt: b[2],\n        }));\n        console.log(mapped[rand]);\n\n        setBalloons(mapped[rand]);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    // only fetch if rand is set\n    if (rand !== null) {\n      console.log(rand);\n      fetchBalloons();\n    };\n  }, [rand]);\n\n  return (\n    <div>\n      <BalloonMap balloons={balloons} />\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAatC,MAAMC,GAAuB,GAAGA,CAAC;EAACC,IAAI;EAAEC,IAAI,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAe,IAAI,CAAC;EAC9D;EACA;EACA;EACA;;EAEED,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,KAAK,IAAI,EAAC;MACdK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B;IACJ;IAAC;IACD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qBAAqBR,IAAI,EAAE,CAAC;QACpD,IAAI,CAACO,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAEpD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,CAAC,CAAC;;QAE7B;QACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAAEC,CAAM,KAAM;UACnCC,GAAG,EAAED,CAAC,CAAC,CAAC,CAAC;UACTE,GAAG,EAAEF,CAAC,CAAC,CAAC,CAAC;UACTG,GAAG,EAAEH,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;QACHV,OAAO,CAACC,GAAG,CAACO,MAAM,CAACb,IAAI,CAAC,CAAC;QAEzBI,WAAW,CAACS,MAAM,CAACb,IAAI,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACZd,OAAO,CAACe,KAAK,CAACD,GAAG,CAAC;MACpB;IACF,CAAC;;IAED;IACA,IAAInB,IAAI,KAAK,IAAI,EAAE;MACjBK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;MACjBO,aAAa,CAAC,CAAC;IACjB;IAAC;EACH,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAAuB,QAAA,eACEvB,OAAA,CAACF,UAAU;MAACO,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAACvB,EAAA,CA7CIH,GAAuB;AAAA2B,EAAA,GAAvB3B,GAAuB;AA+C7B,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}