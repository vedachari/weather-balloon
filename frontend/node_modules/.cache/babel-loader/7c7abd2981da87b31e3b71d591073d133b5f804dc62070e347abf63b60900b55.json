{"ast":null,"code":"/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Check if two values are deeply equal.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}","map":{"version":3,"names":["isDeepEqual","a","b","constructor","Array","isArray","length","i","Map","size","entriesA","from","entries","has","entryA","get","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","Object","prototype","toString","keys","hasOwnProperty","call","key"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-internals/esm/isDeepEqual/isDeepEqual.js"],"sourcesContent":["/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Check if two values are deeply equal.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}