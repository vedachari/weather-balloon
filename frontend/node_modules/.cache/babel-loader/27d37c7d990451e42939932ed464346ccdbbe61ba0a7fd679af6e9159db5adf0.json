{"ast":null,"code":"import { isDeepEqual } from '@mui/x-internals/isDeepEqual';\nimport { createSelector } from \"../../utils/selectors.js\";\nimport { selectorChartsInteractionPointerX, selectorChartsInteractionPointerY } from \"../useChartInteraction/useChartInteraction.selectors.js\";\nimport { getAxisIndex, getAxisValue } from \"./getAxisValue.js\";\nimport { selectorChartXAxis, selectorChartYAxis } from \"./useChartCartesianAxisRendering.selectors.js\";\nconst optionalGetAxisId = (_, id) => id;\n\n/**\n * Get interaction indexes\n */\n\nfunction indexGetter(value, axes, ids = axes.axisIds[0]) {\n  return Array.isArray(ids) ? ids.map(id => getAxisIndex(axes.axis[id], value)) : getAxisIndex(axes.axis[ids], value);\n}\nexport const selectChartsInteractionAxisIndex = (value, axes, id) => {\n  if (value === null) {\n    return null;\n  }\n  const index = indexGetter(value, axes, id);\n  return index === -1 ? null : index;\n};\nexport const selectorChartsInteractionXAxisIndex = createSelector([selectorChartsInteractionPointerX, selectorChartXAxis, optionalGetAxisId], selectChartsInteractionAxisIndex);\nexport const selectorChartsInteractionYAxisIndex = createSelector([selectorChartsInteractionPointerY, selectorChartYAxis, optionalGetAxisId], selectChartsInteractionAxisIndex);\nexport const selectorChartAxisInteraction = createSelector([selectorChartsInteractionPointerX, selectorChartsInteractionPointerY, selectorChartXAxis, selectorChartYAxis], (x, y, xAxis, yAxis) => [...(x === null ? [] : xAxis.axisIds.map(axisId => ({\n  axisId,\n  dataIndex: indexGetter(x, xAxis, axisId)\n}))), ...(y === null ? [] : yAxis.axisIds.map(axisId => ({\n  axisId,\n  dataIndex: indexGetter(y, yAxis, axisId)\n})))].filter(item => item.dataIndex !== null && item.dataIndex >= 0));\n\n/**\n * Get interaction values\n */\n\nfunction valueGetter(value, axes, indexes, ids = axes.axisIds[0]) {\n  return Array.isArray(ids) ? ids.map((id, axisIndex) => {\n    const axis = axes.axis[id];\n    return getAxisValue(axis.scale, axis.data, value, indexes[axisIndex]);\n  }) : getAxisValue(axes.axis[ids].scale, axes.axis[ids].data, value, indexes);\n}\nexport const selectorChartsInteractionXAxisValue = createSelector([selectorChartsInteractionPointerX, selectorChartXAxis, selectorChartsInteractionXAxisIndex, optionalGetAxisId], (x, xAxes, xIndex, id) => {\n  if (x === null || xAxes.axisIds.length === 0) {\n    return null;\n  }\n  return valueGetter(x, xAxes, xIndex, id);\n});\nexport const selectorChartsInteractionYAxisValue = createSelector([selectorChartsInteractionPointerY, selectorChartYAxis, selectorChartsInteractionYAxisIndex, optionalGetAxisId], (y, yAxes, yIndex, id) => {\n  if (y === null || yAxes.axisIds.length === 0) {\n    return null;\n  }\n  return valueGetter(y, yAxes, yIndex, id);\n});\n\n/**\n * Get x-axis ids and corresponding data index that should be display in the tooltip.\n */\nexport const selectorChartsInteractionTooltipXAxes = createSelector([selectorChartsInteractionPointerX, selectorChartXAxis], (value, axes) => {\n  if (value === null) {\n    return [];\n  }\n  return axes.axisIds.filter(id => axes.axis[id].triggerTooltip).map(axisId => ({\n    axisId,\n    dataIndex: getAxisIndex(axes.axis[axisId], value)\n  })).filter(({\n    dataIndex\n  }) => dataIndex >= 0);\n}, {\n  memoizeOptions: {\n    // Keep the same reference if array content is the same.\n    // If possible, avoid this pattern by creating selectors that\n    // uses string/number as arguments.\n    resultEqualityCheck: isDeepEqual\n  }\n});\n\n/**\n * Get y-axis ids and corresponding data index that should be display in the tooltip.\n */\nexport const selectorChartsInteractionTooltipYAxes = createSelector([selectorChartsInteractionPointerY, selectorChartYAxis], (value, axes) => {\n  if (value === null) {\n    return [];\n  }\n  return axes.axisIds.filter(id => axes.axis[id].triggerTooltip).map(axisId => ({\n    axisId,\n    dataIndex: getAxisIndex(axes.axis[axisId], value)\n  })).filter(({\n    dataIndex\n  }) => dataIndex >= 0);\n}, {\n  memoizeOptions: {\n    // Keep the same reference if array content is the same.\n    // If possible, avoid this pattern by creating selectors that\n    // uses string/number as arguments.\n    resultEqualityCheck: isDeepEqual\n  }\n});\n\n/**\n * Return `true` if the axis tooltip has something to display.\n */\nexport const selectorChartsInteractionAxisTooltip = createSelector([selectorChartsInteractionTooltipXAxes, selectorChartsInteractionTooltipYAxes], (xTooltip, yTooltip) => xTooltip.length > 0 || yTooltip.length > 0);","map":{"version":3,"names":["isDeepEqual","createSelector","selectorChartsInteractionPointerX","selectorChartsInteractionPointerY","getAxisIndex","getAxisValue","selectorChartXAxis","selectorChartYAxis","optionalGetAxisId","_","id","indexGetter","value","axes","ids","axisIds","Array","isArray","map","axis","selectChartsInteractionAxisIndex","index","selectorChartsInteractionXAxisIndex","selectorChartsInteractionYAxisIndex","selectorChartAxisInteraction","x","y","xAxis","yAxis","axisId","dataIndex","filter","item","valueGetter","indexes","axisIndex","scale","data","selectorChartsInteractionXAxisValue","xAxes","xIndex","length","selectorChartsInteractionYAxisValue","yAxes","yIndex","selectorChartsInteractionTooltipXAxes","triggerTooltip","memoizeOptions","resultEqualityCheck","selectorChartsInteractionTooltipYAxes","selectorChartsInteractionAxisTooltip","xTooltip","yTooltip"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/plugins/featurePlugins/useChartCartesianAxis/useChartCartesianInteraction.selectors.js"],"sourcesContent":["import { isDeepEqual } from '@mui/x-internals/isDeepEqual';\nimport { createSelector } from \"../../utils/selectors.js\";\nimport { selectorChartsInteractionPointerX, selectorChartsInteractionPointerY } from \"../useChartInteraction/useChartInteraction.selectors.js\";\nimport { getAxisIndex, getAxisValue } from \"./getAxisValue.js\";\nimport { selectorChartXAxis, selectorChartYAxis } from \"./useChartCartesianAxisRendering.selectors.js\";\nconst optionalGetAxisId = (_, id) => id;\n\n/**\n * Get interaction indexes\n */\n\nfunction indexGetter(value, axes, ids = axes.axisIds[0]) {\n  return Array.isArray(ids) ? ids.map(id => getAxisIndex(axes.axis[id], value)) : getAxisIndex(axes.axis[ids], value);\n}\nexport const selectChartsInteractionAxisIndex = (value, axes, id) => {\n  if (value === null) {\n    return null;\n  }\n  const index = indexGetter(value, axes, id);\n  return index === -1 ? null : index;\n};\nexport const selectorChartsInteractionXAxisIndex = createSelector([selectorChartsInteractionPointerX, selectorChartXAxis, optionalGetAxisId], selectChartsInteractionAxisIndex);\nexport const selectorChartsInteractionYAxisIndex = createSelector([selectorChartsInteractionPointerY, selectorChartYAxis, optionalGetAxisId], selectChartsInteractionAxisIndex);\nexport const selectorChartAxisInteraction = createSelector([selectorChartsInteractionPointerX, selectorChartsInteractionPointerY, selectorChartXAxis, selectorChartYAxis], (x, y, xAxis, yAxis) => [...(x === null ? [] : xAxis.axisIds.map(axisId => ({\n  axisId,\n  dataIndex: indexGetter(x, xAxis, axisId)\n}))), ...(y === null ? [] : yAxis.axisIds.map(axisId => ({\n  axisId,\n  dataIndex: indexGetter(y, yAxis, axisId)\n})))].filter(item => item.dataIndex !== null && item.dataIndex >= 0));\n\n/**\n * Get interaction values\n */\n\nfunction valueGetter(value, axes, indexes, ids = axes.axisIds[0]) {\n  return Array.isArray(ids) ? ids.map((id, axisIndex) => {\n    const axis = axes.axis[id];\n    return getAxisValue(axis.scale, axis.data, value, indexes[axisIndex]);\n  }) : getAxisValue(axes.axis[ids].scale, axes.axis[ids].data, value, indexes);\n}\nexport const selectorChartsInteractionXAxisValue = createSelector([selectorChartsInteractionPointerX, selectorChartXAxis, selectorChartsInteractionXAxisIndex, optionalGetAxisId], (x, xAxes, xIndex, id) => {\n  if (x === null || xAxes.axisIds.length === 0) {\n    return null;\n  }\n  return valueGetter(x, xAxes, xIndex, id);\n});\nexport const selectorChartsInteractionYAxisValue = createSelector([selectorChartsInteractionPointerY, selectorChartYAxis, selectorChartsInteractionYAxisIndex, optionalGetAxisId], (y, yAxes, yIndex, id) => {\n  if (y === null || yAxes.axisIds.length === 0) {\n    return null;\n  }\n  return valueGetter(y, yAxes, yIndex, id);\n});\n\n/**\n * Get x-axis ids and corresponding data index that should be display in the tooltip.\n */\nexport const selectorChartsInteractionTooltipXAxes = createSelector([selectorChartsInteractionPointerX, selectorChartXAxis], (value, axes) => {\n  if (value === null) {\n    return [];\n  }\n  return axes.axisIds.filter(id => axes.axis[id].triggerTooltip).map(axisId => ({\n    axisId,\n    dataIndex: getAxisIndex(axes.axis[axisId], value)\n  })).filter(({\n    dataIndex\n  }) => dataIndex >= 0);\n}, {\n  memoizeOptions: {\n    // Keep the same reference if array content is the same.\n    // If possible, avoid this pattern by creating selectors that\n    // uses string/number as arguments.\n    resultEqualityCheck: isDeepEqual\n  }\n});\n\n/**\n * Get y-axis ids and corresponding data index that should be display in the tooltip.\n */\nexport const selectorChartsInteractionTooltipYAxes = createSelector([selectorChartsInteractionPointerY, selectorChartYAxis], (value, axes) => {\n  if (value === null) {\n    return [];\n  }\n  return axes.axisIds.filter(id => axes.axis[id].triggerTooltip).map(axisId => ({\n    axisId,\n    dataIndex: getAxisIndex(axes.axis[axisId], value)\n  })).filter(({\n    dataIndex\n  }) => dataIndex >= 0);\n}, {\n  memoizeOptions: {\n    // Keep the same reference if array content is the same.\n    // If possible, avoid this pattern by creating selectors that\n    // uses string/number as arguments.\n    resultEqualityCheck: isDeepEqual\n  }\n});\n\n/**\n * Return `true` if the axis tooltip has something to display.\n */\nexport const selectorChartsInteractionAxisTooltip = createSelector([selectorChartsInteractionTooltipXAxes, selectorChartsInteractionTooltipYAxes], (xTooltip, yTooltip) => xTooltip.length > 0 || yTooltip.length > 0);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}