{"ast":null,"code":"var _jsxFileName = \"/Users/vedachari/projects/weather-balloon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Map from './components/Map';\nimport Slider from './components/Slider';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [rand, setRand] = useState(null);\n  const [data, setData] = useState(null);\n  const [balloon, setBalloon] = useState(null);\n  const [hour, setHour] = useState(-1);\n\n  // Generate initial random number\n  useEffect(() => {\n    const r = Math.floor(Math.random() * 1000);\n    setHour(0);\n    setRand(r);\n  }, []);\n\n  // Log whenever rand changes\n  useEffect(() => {\n    console.log(\"Random index chosen:\", rand);\n  }, [rand]);\n\n  // Handler for \"New Balloon\" button\n  const handleNewBalloon = () => {\n    const r = Math.floor(Math.random() * 1000);\n    if (data) {\n      setBalloon(data[r]);\n    }\n    ;\n    setRand(r);\n  };\n\n  // Hour changed so get new balloon values\n  useEffect(() => {\n    if (rand === null) {\n      console.log(\"rand not chosen\");\n      return;\n    }\n    ;\n    const fetchBalloons = async () => {\n      try {\n        console.log(\"fetching hour %d\", hour);\n        const res = await fetch(`/api/treasure/get/${hour}`);\n        if (!res.ok) throw new Error(\"Failed to fetch data\");\n        const json = await res.json();\n\n        // convert API data to {lat, lon} format\n        const mapped = json.map(b => ({\n          lat: b[0],\n          lon: b[1],\n          alt: b[2]\n        }));\n        console.log(mapped[rand]);\n        setData(mapped);\n        setBalloon(mapped[rand]);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    // only fetch if rand is set\n    if (rand !== null) {\n      console.log(rand);\n      fetchBalloons();\n    }\n    ;\n  }, [hour]);\n\n  // lon/ lat changed so call weather API\n  const [weather, setWeather] = useState(\"\");\n  useEffect(() => {\n    if ((balloon === null || balloon === void 0 ? void 0 : balloon.lat) === null || (balloon === null || balloon === void 0 ? void 0 : balloon.lon) == null) {\n      console.log(\"rand not chosen\");\n      return;\n    }\n    ;\n    const fetchBalloons = async () => {\n      try {\n        console.log(\"fetching hour %d\", hour);\n        const res = await fetch(`/api/weather/${balloon.lat}/${balloon.lon}`);\n        if (!res.ok) throw new Error(\"Failed to fetch data\");\n        const json = await res.json();\n        setWeather(json);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    // only fetch if rand is set\n    if (rand !== null) {\n      console.log(rand);\n      fetchBalloons();\n    }\n    ;\n  }, [balloon === null || balloon === void 0 ? void 0 : balloon.lat, balloon === null || balloon === void 0 ? void 0 : balloon.lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewBalloon,\n        className: \"generate-button\",\n        children: \"Show New Balloon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: balloon && /*#__PURE__*/_jsxDEV(Map, {\n          lat: balloon.lat,\n          lon: balloon.lon,\n          alt: balloon.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        hour: hour,\n        setHour: setHour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YIzVCNAei4Y7JTV+CR9cGdTOAmU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Slider","jsxDEV","_jsxDEV","App","_s","rand","setRand","data","setData","balloon","setBalloon","hour","setHour","r","Math","floor","random","console","log","handleNewBalloon","fetchBalloons","res","fetch","ok","Error","json","mapped","map","b","lat","lon","alt","err","error","weather","setWeather","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vedachari/projects/weather-balloon/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Map from './components/Map';\nimport Slider from './components/Slider';\nimport Info from './components/Info'\nimport \"./App.css\";\n\ntype Balloon = {\n  lat: number;\n  lon: number;\n  alt: number;\n};\n\nconst App: React.FC = () => {\n  const [rand, setRand] = useState<number | null>(null);\n  const [data, setData] = useState<Balloon[] | null> (null);\n  const [balloon, setBalloon] = useState<Balloon|null>(null);\n  const [hour, setHour] = useState< number>(-1);\n\n  // Generate initial random number\n  useEffect(() => {\n    const r = Math.floor(Math.random() * 1000);\n    setHour(0);\n    setRand(r);\n  }, []);\n\n  // Log whenever rand changes\n  useEffect(() => {\n    console.log(\"Random index chosen:\", rand);\n  }, [rand]);\n\n  // Handler for \"New Balloon\" button\n  const handleNewBalloon = () => {\n    const r = Math.floor(Math.random() * 1000);\n    if (data){\n      setBalloon(data[r]);\n    };\n    setRand(r);\n  };\n\n  // Hour changed so get new balloon values\n  useEffect(() => {\n      if (rand === null){\n          console.log(\"rand not chosen\");\n          return;\n      };\n      const fetchBalloons = async () => {\n        try {\n          console.log(\"fetching hour %d\", hour);\n          const res = await fetch(`/api/treasure/get/${hour}`);\n          if (!res.ok) throw new Error(\"Failed to fetch data\");\n  \n          const json = await res.json();\n  \n          // convert API data to {lat, lon} format\n          const mapped = json.map((b: any) => ({\n            lat: b[0],\n            lon: b[1],\n            alt: b[2],\n          }));\n          console.log(mapped[rand]);\n\n          setData(mapped);\n          setBalloon(mapped[rand]);\n        } catch (err) {\n          console.error(err);\n        }\n      };\n  \n      // only fetch if rand is set\n      if (rand !== null) {\n        console.log(rand);\n        fetchBalloons();\n      };\n    }, [hour]);\n\n  // lon/ lat changed so call weather API\n  const [weather, setWeather] = useState<String>(\"\");\n  useEffect(() => {\n      if (balloon?.lat === null || balloon?.lon == null){\n          console.log(\"rand not chosen\");\n          return;\n      };\n      const fetchBalloons = async () => {\n        try {\n          console.log(\"fetching hour %d\", hour);\n          const res = await fetch(`/api/weather/${balloon.lat}/${balloon.lon}`);\n          if (!res.ok) throw new Error(\"Failed to fetch data\");\n  \n          const json = await res.json();\n          setWeather(json);\n        } catch (err) {\n          console.error(err);\n        }\n      };\n  \n      // only fetch if rand is set\n      if (rand !== null) {\n        console.log(rand);\n        fetchBalloons();\n      };\n    }, [balloon?.lat, balloon?.lon]);\n\n  return (\n    <div className=\"page\">\n      {/* Button at the top */}\n      <div className=\"button\">\n        <button onClick={handleNewBalloon} className=\"generate-button\">\n          Show New Balloon\n        </button>\n      </div>\n\n      {/* Map container */}\n      <div className=\"map-container\">\n          <div className=\"map\">\n            {balloon && (<Map lat = {balloon.lat} lon = {balloon.lon} alt = {balloon.alt} />)}\n          </div>\n          \n      </div>\n      <div className=\"slider\">\n            <Slider \n              hour = {hour}\n              setHour = {setHour}/>\n          </div>\n      {/* Placeholder for other containers */}\n        <div className=\"info-container\">\n          <p>weather</p>\n        </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}