{"ast":null,"code":"'use client';\n\nimport { useXAxis, useYAxis } from \"./useAxis.js\";\nimport { useZAxis } from \"./useZAxis.js\";\n\n/**\n * Get the X axis color scale.\n *\n * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.\n * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified X axis, or undefined if not found.\n */\nexport function useXColorScale(axisId) {\n  const axis = useXAxis(axisId);\n  return axis.colorScale;\n}\n\n/**\n * Get the Y axis color scale.\n *\n * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.\n * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified Y axis, or undefined if not found.\n */\nexport function useYColorScale(axisId) {\n  const axis = useYAxis(axisId);\n  return axis.colorScale;\n}\n\n/**\n * Get the Z axis color scale.\n *\n * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.\n * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified Z axis, or undefined if not found.\n */\nexport function useZColorScale(axisId) {\n  const axis = useZAxis(axisId);\n  return axis.colorScale;\n}","map":{"version":3,"names":["useXAxis","useYAxis","useZAxis","useXColorScale","axisId","axis","colorScale","useYColorScale","useZColorScale"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/hooks/useColorScale.js"],"sourcesContent":["'use client';\n\nimport { useXAxis, useYAxis } from \"./useAxis.js\";\nimport { useZAxis } from \"./useZAxis.js\";\n\n/**\n * Get the X axis color scale.\n *\n * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.\n * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified X axis, or undefined if not found.\n */\nexport function useXColorScale(axisId) {\n  const axis = useXAxis(axisId);\n  return axis.colorScale;\n}\n\n/**\n * Get the Y axis color scale.\n *\n * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.\n * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified Y axis, or undefined if not found.\n */\nexport function useYColorScale(axisId) {\n  const axis = useYAxis(axisId);\n  return axis.colorScale;\n}\n\n/**\n * Get the Z axis color scale.\n *\n * @param {AxisId | undefined} axisId - If provided returns color scale for axisId, else returns the values for the default axis.\n * @returns {AxisScaleComputedConfig[S]['colorScale'] | undefined} The color scale for the specified Z axis, or undefined if not found.\n */\nexport function useZColorScale(axisId) {\n  const axis = useZAxis(axisId);\n  return axis.colorScale;\n}"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,cAAc;AACjD,SAASC,QAAQ,QAAQ,eAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,MAAM,EAAE;EACrC,MAAMC,IAAI,GAAGL,QAAQ,CAACI,MAAM,CAAC;EAC7B,OAAOC,IAAI,CAACC,UAAU;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACH,MAAM,EAAE;EACrC,MAAMC,IAAI,GAAGJ,QAAQ,CAACG,MAAM,CAAC;EAC7B,OAAOC,IAAI,CAACC,UAAU;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,cAAcA,CAACJ,MAAM,EAAE;EACrC,MAAMC,IAAI,GAAGH,QAAQ,CAACE,MAAM,CAAC;EAC7B,OAAOC,IAAI,CAACC,UAAU;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}