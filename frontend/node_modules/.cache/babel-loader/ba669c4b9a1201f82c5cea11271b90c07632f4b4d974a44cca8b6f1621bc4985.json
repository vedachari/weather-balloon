{"ast":null,"code":"import { timer, now, timeout } from '@mui/x-charts-vendor/d3-timer';\n\n/**\n * A resumable transition class inspired by d3-transition.\n * Allows for starting, and stopping and resuming transitions.\n *\n * The transition is started automatically.\n * A transition cannot be restarted after it has finished.\n * Resuming a transition will continue from the point it was stopped, i.e., easing will continue from the point it was\n * stopped.\n */\nexport class Transition {\n  elapsed = 0;\n  timer = null;\n  /**\n   * Create a new ResumableTransition.\n   * @param duration Duration in milliseconds\n   * @param easingFn The easing function\n   * @param onTick Callback function called on each animation frame with the eased time in range [0, 1].\n   */\n  constructor(duration, easingFn, onTick) {\n    this.duration = duration;\n    this.easingFn = easingFn;\n    this.onTickCallback = onTick;\n    this.resume();\n  }\n  get running() {\n    return this.timer !== null;\n  }\n  timerCallback(elapsed) {\n    this.elapsed = Math.min(elapsed, this.duration);\n    const t = this.duration === 0 ? 1 : this.elapsed / this.duration;\n    const easedT = this.easingFn(t);\n\n    // Call the tick callback with the current value\n    this.onTickCallback(easedT);\n    if (this.elapsed >= this.duration) {\n      this.stop();\n    }\n  }\n\n  /**\n   * Resume the transition\n   */\n  resume() {\n    if (this.running || this.elapsed >= this.duration) {\n      return this;\n    }\n\n    /* If we're resuming the transition, then subtract elapsed to continue the easing. */\n    const time = now() - this.elapsed;\n    this.timer = timer(elapsed => this.timerCallback(elapsed), 0, time);\n    return this;\n  }\n\n  /**\n   * Stops the transition.\n   */\n  stop() {\n    if (!this.running) {\n      return this;\n    }\n    if (this.timer) {\n      this.timer.stop();\n      this.timer = null;\n    }\n    return this;\n  }\n\n  /**\n   * Immediately finishes the transition and calls the tick callback with the final value.\n   */\n  finish() {\n    this.stop();\n    timeout(() => this.timerCallback(this.duration));\n    return this;\n  }\n}","map":{"version":3,"names":["timer","now","timeout","Transition","elapsed","constructor","duration","easingFn","onTick","onTickCallback","resume","running","timerCallback","Math","min","t","easedT","stop","time","finish"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/animation/Transition.js"],"sourcesContent":["import { timer, now, timeout } from '@mui/x-charts-vendor/d3-timer';\n\n/**\n * A resumable transition class inspired by d3-transition.\n * Allows for starting, and stopping and resuming transitions.\n *\n * The transition is started automatically.\n * A transition cannot be restarted after it has finished.\n * Resuming a transition will continue from the point it was stopped, i.e., easing will continue from the point it was\n * stopped.\n */\nexport class Transition {\n  elapsed = 0;\n  timer = null;\n  /**\n   * Create a new ResumableTransition.\n   * @param duration Duration in milliseconds\n   * @param easingFn The easing function\n   * @param onTick Callback function called on each animation frame with the eased time in range [0, 1].\n   */\n  constructor(duration, easingFn, onTick) {\n    this.duration = duration;\n    this.easingFn = easingFn;\n    this.onTickCallback = onTick;\n    this.resume();\n  }\n  get running() {\n    return this.timer !== null;\n  }\n  timerCallback(elapsed) {\n    this.elapsed = Math.min(elapsed, this.duration);\n    const t = this.duration === 0 ? 1 : this.elapsed / this.duration;\n    const easedT = this.easingFn(t);\n\n    // Call the tick callback with the current value\n    this.onTickCallback(easedT);\n    if (this.elapsed >= this.duration) {\n      this.stop();\n    }\n  }\n\n  /**\n   * Resume the transition\n   */\n  resume() {\n    if (this.running || this.elapsed >= this.duration) {\n      return this;\n    }\n\n    /* If we're resuming the transition, then subtract elapsed to continue the easing. */\n    const time = now() - this.elapsed;\n    this.timer = timer(elapsed => this.timerCallback(elapsed), 0, time);\n    return this;\n  }\n\n  /**\n   * Stops the transition.\n   */\n  stop() {\n    if (!this.running) {\n      return this;\n    }\n    if (this.timer) {\n      this.timer.stop();\n      this.timer = null;\n    }\n    return this;\n  }\n\n  /**\n   * Immediately finishes the transition and calls the tick callback with the final value.\n   */\n  finish() {\n    this.stop();\n    timeout(() => this.timerCallback(this.duration));\n    return this;\n  }\n}"],"mappings":"AAAA,SAASA,KAAK,EAAEC,GAAG,EAAEC,OAAO,QAAQ,+BAA+B;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,CAAC;EACtBC,OAAO,GAAG,CAAC;EACXJ,KAAK,GAAG,IAAI;EACZ;AACF;AACA;AACA;AACA;AACA;EACEK,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACtC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,cAAc,GAAGD,MAAM;IAC5B,IAAI,CAACE,MAAM,CAAC,CAAC;EACf;EACA,IAAIC,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACX,KAAK,KAAK,IAAI;EAC5B;EACAY,aAAaA,CAACR,OAAO,EAAE;IACrB,IAAI,CAACA,OAAO,GAAGS,IAAI,CAACC,GAAG,CAACV,OAAO,EAAE,IAAI,CAACE,QAAQ,CAAC;IAC/C,MAAMS,CAAC,GAAG,IAAI,CAACT,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,GAAG,IAAI,CAACE,QAAQ;IAChE,MAAMU,MAAM,GAAG,IAAI,CAACT,QAAQ,CAACQ,CAAC,CAAC;;IAE/B;IACA,IAAI,CAACN,cAAc,CAACO,MAAM,CAAC;IAC3B,IAAI,IAAI,CAACZ,OAAO,IAAI,IAAI,CAACE,QAAQ,EAAE;MACjC,IAAI,CAACW,IAAI,CAAC,CAAC;IACb;EACF;;EAEA;AACF;AACA;EACEP,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACC,OAAO,IAAI,IAAI,CAACP,OAAO,IAAI,IAAI,CAACE,QAAQ,EAAE;MACjD,OAAO,IAAI;IACb;;IAEA;IACA,MAAMY,IAAI,GAAGjB,GAAG,CAAC,CAAC,GAAG,IAAI,CAACG,OAAO;IACjC,IAAI,CAACJ,KAAK,GAAGA,KAAK,CAACI,OAAO,IAAI,IAAI,CAACQ,aAAa,CAACR,OAAO,CAAC,EAAE,CAAC,EAAEc,IAAI,CAAC;IACnE,OAAO,IAAI;EACb;;EAEA;AACF;AACA;EACED,IAAIA,CAAA,EAAG;IACL,IAAI,CAAC,IAAI,CAACN,OAAO,EAAE;MACjB,OAAO,IAAI;IACb;IACA,IAAI,IAAI,CAACX,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAACiB,IAAI,CAAC,CAAC;MACjB,IAAI,CAACjB,KAAK,GAAG,IAAI;IACnB;IACA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;EACEmB,MAAMA,CAAA,EAAG;IACP,IAAI,CAACF,IAAI,CAAC,CAAC;IACXf,OAAO,CAAC,MAAM,IAAI,CAACU,aAAa,CAAC,IAAI,CAACN,QAAQ,CAAC,CAAC;IAChD,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}