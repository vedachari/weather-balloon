{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchWeatherApi = fetchWeatherApi;\nconst flatbuffers_1 = require(\"flatbuffers\");\nconst weather_api_response_1 = require(\"@openmeteo/sdk/weather-api-response\");\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\nfunction fetchRetried(url_1) {\n  return __awaiter(this, arguments, void 0, function* (url, retries = 3, backoffFactor = 0.5, backoffMax = 2, fetchOptions = {}) {\n    const statusToRetry = [500, 502, 504];\n    const statusWithJsonError = [400, 429];\n    let currentTry = 0;\n    let response = yield fetch(url, fetchOptions);\n    while (statusToRetry.includes(response.status)) {\n      currentTry++;\n      if (currentTry >= retries) {\n        throw new Error(response.statusText);\n      }\n      const sleepMs = Math.min(backoffFactor * Math.pow(2, currentTry), backoffMax) * 1000;\n      yield sleep(sleepMs);\n      response = yield fetch(url, fetchOptions);\n    }\n    if (statusWithJsonError.includes(response.status)) {\n      const json = yield response.json();\n      if ('reason' in json) {\n        throw new Error(json.reason);\n      }\n      throw new Error(response.statusText);\n    }\n    return response;\n  });\n}\n/**\n * Retrieve data from the Open-Meteo weather API\n *\n * @param {string} url Server and endpoint. E.g. \"https://api.open-meteo.com/v1/forecast\"\n * @param {any} params URL parameter as an object\n * @param {number} [retries=3] Number of retries in case of an server error\n * @param {number} [backoffFactor=0.2] Exponential backoff factor to increase wait time after each retry\n * @param {number} [backoffMax=2] Maximum wait time between retries\n * @param {RequestInit} [fetchOptions={}] Additional fetch options such as headers, signal, etc.\n * @returns {Promise<WeatherApiResponse[]>}\n */\nfunction fetchWeatherApi(url_1, params_1) {\n  return __awaiter(this, arguments, void 0, function* (url, params, retries = 3, backoffFactor = 0.2, backoffMax = 2, fetchOptions = {}) {\n    const urlParams = new URLSearchParams(params);\n    urlParams.set('format', 'flatbuffers');\n    const response = yield fetchRetried(`${url}?${urlParams.toString()}`, retries, backoffFactor, backoffMax, fetchOptions);\n    const fb = new flatbuffers_1.ByteBuffer(new Uint8Array(yield response.arrayBuffer()));\n    const results = [];\n    let pos = 0;\n    while (pos < fb.capacity()) {\n      fb.setPosition(pos);\n      const len = fb.readInt32(fb.position());\n      results.push(weather_api_response_1.WeatherApiResponse.getSizePrefixedRootAsWeatherApiResponse(fb));\n      pos += len + 4;\n    }\n    return results;\n  });\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","fetchWeatherApi","flatbuffers_1","require","weather_api_response_1","sleep","ms","r","setTimeout","fetchRetried","url_1","arguments","url","retries","backoffFactor","backoffMax","fetchOptions","statusToRetry","statusWithJsonError","currentTry","response","fetch","includes","status","Error","statusText","sleepMs","Math","min","pow","json","reason","params_1","params","urlParams","URLSearchParams","set","toString","fb","ByteBuffer","Uint8Array","arrayBuffer","results","pos","capacity","setPosition","len","readInt32","position","push","WeatherApiResponse","getSizePrefixedRootAsWeatherApiResponse"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/openmeteo/lib/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchWeatherApi = fetchWeatherApi;\nconst flatbuffers_1 = require(\"flatbuffers\");\nconst weather_api_response_1 = require(\"@openmeteo/sdk/weather-api-response\");\nconst sleep = (ms) => new Promise(r => setTimeout(r, ms));\nfunction fetchRetried(url_1) {\n    return __awaiter(this, arguments, void 0, function* (url, retries = 3, backoffFactor = 0.5, backoffMax = 2, fetchOptions = {}) {\n        const statusToRetry = [500, 502, 504];\n        const statusWithJsonError = [400, 429];\n        let currentTry = 0;\n        let response = yield fetch(url, fetchOptions);\n        while (statusToRetry.includes(response.status)) {\n            currentTry++;\n            if (currentTry >= retries) {\n                throw new Error(response.statusText);\n            }\n            const sleepMs = Math.min(backoffFactor * Math.pow(2, currentTry), backoffMax) * 1000;\n            yield sleep(sleepMs);\n            response = yield fetch(url, fetchOptions);\n        }\n        if (statusWithJsonError.includes(response.status)) {\n            const json = yield response.json();\n            if ('reason' in json) {\n                throw new Error(json.reason);\n            }\n            throw new Error(response.statusText);\n        }\n        return response;\n    });\n}\n/**\n * Retrieve data from the Open-Meteo weather API\n *\n * @param {string} url Server and endpoint. E.g. \"https://api.open-meteo.com/v1/forecast\"\n * @param {any} params URL parameter as an object\n * @param {number} [retries=3] Number of retries in case of an server error\n * @param {number} [backoffFactor=0.2] Exponential backoff factor to increase wait time after each retry\n * @param {number} [backoffMax=2] Maximum wait time between retries\n * @param {RequestInit} [fetchOptions={}] Additional fetch options such as headers, signal, etc.\n * @returns {Promise<WeatherApiResponse[]>}\n */\nfunction fetchWeatherApi(url_1, params_1) {\n    return __awaiter(this, arguments, void 0, function* (url, params, retries = 3, backoffFactor = 0.2, backoffMax = 2, fetchOptions = {}) {\n        const urlParams = new URLSearchParams(params);\n        urlParams.set('format', 'flatbuffers');\n        const response = yield fetchRetried(`${url}?${urlParams.toString()}`, retries, backoffFactor, backoffMax, fetchOptions);\n        const fb = new flatbuffers_1.ByteBuffer(new Uint8Array(yield response.arrayBuffer()));\n        const results = [];\n        let pos = 0;\n        while (pos < fb.capacity()) {\n            fb.setPosition(pos);\n            const len = fb.readInt32(fb.position());\n            results.push(weather_api_response_1.WeatherApiResponse.getSizePrefixedRootAsWeatherApiResponse(fb));\n            pos += len + 4;\n        }\n        return results;\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}