{"ast":null,"code":"import { createSelector } from \"../../utils/selectors.js\";\nimport { createIsHighlighted } from \"./createIsHighlighted.js\";\nimport { createIsFaded } from \"./createIsFaded.js\";\nimport { getSeriesHighlightedItem, getSeriesUnfadedItem, isSeriesFaded, isSeriesHighlighted } from \"./highlightStates.js\";\nimport { selectorChartsKeyboardItem } from \"../useChartKeyboardNavigation/index.js\";\nconst selectHighlight = state => state.highlight;\nconst selectSeries = state => state.series;\nexport const selectorChartsHighlightScopePerSeriesId = createSelector([selectSeries], series => {\n  const map = new Map();\n  Object.keys(series.processedSeries).forEach(seriesType => {\n    const seriesData = series.processedSeries[seriesType];\n    seriesData?.seriesOrder?.forEach(seriesId => {\n      const seriesItem = seriesData?.series[seriesId];\n      map.set(seriesId, seriesItem?.highlightScope);\n    });\n  });\n  return map;\n});\nexport const selectorChartsHighlightedItem = createSelector([selectHighlight, selectorChartsKeyboardItem], function selectorChartsHighlightedItem(highlight, keyboardItem) {\n  return highlight.lastUpdate === 'pointer' ? highlight.item : keyboardItem;\n});\nexport const selectorChartsHighlightScope = createSelector([selectorChartsHighlightScopePerSeriesId, selectorChartsHighlightedItem], function selectorChartsHighlightScope(seriesIdToHighlightScope, highlightedItem) {\n  if (!highlightedItem) {\n    return null;\n  }\n  const highlightScope = seriesIdToHighlightScope.get(highlightedItem.seriesId);\n  if (highlightScope === undefined) {\n    return null;\n  }\n  return highlightScope;\n});\nexport const selectorChartsIsHighlightedCallback = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem], createIsHighlighted);\nexport const selectorChartsIsFadedCallback = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem], createIsFaded);\nexport const selectorChartsIsHighlighted = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, item) => item], function selectorChartsIsHighlighted(highlightScope, highlightedItem, item) {\n  return createIsHighlighted(highlightScope, highlightedItem)(item);\n});\nexport const selectorChartIsSeriesHighlighted = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], isSeriesHighlighted);\nexport const selectorChartIsSeriesFaded = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], isSeriesFaded);\nexport const selectorChartSeriesUnfadedItem = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], getSeriesUnfadedItem);\nexport const selectorChartSeriesHighlightedItem = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], getSeriesHighlightedItem);\nexport const selectorChartsIsFaded = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, item) => item], function selectorChartsIsFaded(highlightScope, highlightedItem, item) {\n  return createIsFaded(highlightScope, highlightedItem)(item);\n});","map":{"version":3,"names":["createSelector","createIsHighlighted","createIsFaded","getSeriesHighlightedItem","getSeriesUnfadedItem","isSeriesFaded","isSeriesHighlighted","selectorChartsKeyboardItem","selectHighlight","state","highlight","selectSeries","series","selectorChartsHighlightScopePerSeriesId","map","Map","Object","keys","processedSeries","forEach","seriesType","seriesData","seriesOrder","seriesId","seriesItem","set","highlightScope","selectorChartsHighlightedItem","keyboardItem","lastUpdate","item","selectorChartsHighlightScope","seriesIdToHighlightScope","highlightedItem","get","undefined","selectorChartsIsHighlightedCallback","selectorChartsIsFadedCallback","selectorChartsIsHighlighted","_","selectorChartIsSeriesHighlighted","selectorChartIsSeriesFaded","selectorChartSeriesUnfadedItem","selectorChartSeriesHighlightedItem","selectorChartsIsFaded"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/plugins/featurePlugins/useChartHighlight/useChartHighlight.selectors.js"],"sourcesContent":["import { createSelector } from \"../../utils/selectors.js\";\nimport { createIsHighlighted } from \"./createIsHighlighted.js\";\nimport { createIsFaded } from \"./createIsFaded.js\";\nimport { getSeriesHighlightedItem, getSeriesUnfadedItem, isSeriesFaded, isSeriesHighlighted } from \"./highlightStates.js\";\nimport { selectorChartsKeyboardItem } from \"../useChartKeyboardNavigation/index.js\";\nconst selectHighlight = state => state.highlight;\nconst selectSeries = state => state.series;\nexport const selectorChartsHighlightScopePerSeriesId = createSelector([selectSeries], series => {\n  const map = new Map();\n  Object.keys(series.processedSeries).forEach(seriesType => {\n    const seriesData = series.processedSeries[seriesType];\n    seriesData?.seriesOrder?.forEach(seriesId => {\n      const seriesItem = seriesData?.series[seriesId];\n      map.set(seriesId, seriesItem?.highlightScope);\n    });\n  });\n  return map;\n});\nexport const selectorChartsHighlightedItem = createSelector([selectHighlight, selectorChartsKeyboardItem], function selectorChartsHighlightedItem(highlight, keyboardItem) {\n  return highlight.lastUpdate === 'pointer' ? highlight.item : keyboardItem;\n});\nexport const selectorChartsHighlightScope = createSelector([selectorChartsHighlightScopePerSeriesId, selectorChartsHighlightedItem], function selectorChartsHighlightScope(seriesIdToHighlightScope, highlightedItem) {\n  if (!highlightedItem) {\n    return null;\n  }\n  const highlightScope = seriesIdToHighlightScope.get(highlightedItem.seriesId);\n  if (highlightScope === undefined) {\n    return null;\n  }\n  return highlightScope;\n});\nexport const selectorChartsIsHighlightedCallback = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem], createIsHighlighted);\nexport const selectorChartsIsFadedCallback = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem], createIsFaded);\nexport const selectorChartsIsHighlighted = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, item) => item], function selectorChartsIsHighlighted(highlightScope, highlightedItem, item) {\n  return createIsHighlighted(highlightScope, highlightedItem)(item);\n});\nexport const selectorChartIsSeriesHighlighted = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], isSeriesHighlighted);\nexport const selectorChartIsSeriesFaded = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], isSeriesFaded);\nexport const selectorChartSeriesUnfadedItem = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], getSeriesUnfadedItem);\nexport const selectorChartSeriesHighlightedItem = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, seriesId) => seriesId], getSeriesHighlightedItem);\nexport const selectorChartsIsFaded = createSelector([selectorChartsHighlightScope, selectorChartsHighlightedItem, (_, item) => item], function selectorChartsIsFaded(highlightScope, highlightedItem, item) {\n  return createIsFaded(highlightScope, highlightedItem)(item);\n});"],"mappings":"AAAA,SAASA,cAAc,QAAQ,0BAA0B;AACzD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,wBAAwB,EAAEC,oBAAoB,EAAEC,aAAa,EAAEC,mBAAmB,QAAQ,sBAAsB;AACzH,SAASC,0BAA0B,QAAQ,wCAAwC;AACnF,MAAMC,eAAe,GAAGC,KAAK,IAAIA,KAAK,CAACC,SAAS;AAChD,MAAMC,YAAY,GAAGF,KAAK,IAAIA,KAAK,CAACG,MAAM;AAC1C,OAAO,MAAMC,uCAAuC,GAAGb,cAAc,CAAC,CAACW,YAAY,CAAC,EAAEC,MAAM,IAAI;EAC9F,MAAME,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;EACrBC,MAAM,CAACC,IAAI,CAACL,MAAM,CAACM,eAAe,CAAC,CAACC,OAAO,CAACC,UAAU,IAAI;IACxD,MAAMC,UAAU,GAAGT,MAAM,CAACM,eAAe,CAACE,UAAU,CAAC;IACrDC,UAAU,EAAEC,WAAW,EAAEH,OAAO,CAACI,QAAQ,IAAI;MAC3C,MAAMC,UAAU,GAAGH,UAAU,EAAET,MAAM,CAACW,QAAQ,CAAC;MAC/CT,GAAG,CAACW,GAAG,CAACF,QAAQ,EAAEC,UAAU,EAAEE,cAAc,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOZ,GAAG;AACZ,CAAC,CAAC;AACF,OAAO,MAAMa,6BAA6B,GAAG3B,cAAc,CAAC,CAACQ,eAAe,EAAED,0BAA0B,CAAC,EAAE,SAASoB,6BAA6BA,CAACjB,SAAS,EAAEkB,YAAY,EAAE;EACzK,OAAOlB,SAAS,CAACmB,UAAU,KAAK,SAAS,GAAGnB,SAAS,CAACoB,IAAI,GAAGF,YAAY;AAC3E,CAAC,CAAC;AACF,OAAO,MAAMG,4BAA4B,GAAG/B,cAAc,CAAC,CAACa,uCAAuC,EAAEc,6BAA6B,CAAC,EAAE,SAASI,4BAA4BA,CAACC,wBAAwB,EAAEC,eAAe,EAAE;EACpN,IAAI,CAACA,eAAe,EAAE;IACpB,OAAO,IAAI;EACb;EACA,MAAMP,cAAc,GAAGM,wBAAwB,CAACE,GAAG,CAACD,eAAe,CAACV,QAAQ,CAAC;EAC7E,IAAIG,cAAc,KAAKS,SAAS,EAAE;IAChC,OAAO,IAAI;EACb;EACA,OAAOT,cAAc;AACvB,CAAC,CAAC;AACF,OAAO,MAAMU,mCAAmC,GAAGpC,cAAc,CAAC,CAAC+B,4BAA4B,EAAEJ,6BAA6B,CAAC,EAAE1B,mBAAmB,CAAC;AACrJ,OAAO,MAAMoC,6BAA6B,GAAGrC,cAAc,CAAC,CAAC+B,4BAA4B,EAAEJ,6BAA6B,CAAC,EAAEzB,aAAa,CAAC;AACzI,OAAO,MAAMoC,2BAA2B,GAAGtC,cAAc,CAAC,CAAC+B,4BAA4B,EAAEJ,6BAA6B,EAAE,CAACY,CAAC,EAAET,IAAI,KAAKA,IAAI,CAAC,EAAE,SAASQ,2BAA2BA,CAACZ,cAAc,EAAEO,eAAe,EAAEH,IAAI,EAAE;EACtN,OAAO7B,mBAAmB,CAACyB,cAAc,EAAEO,eAAe,CAAC,CAACH,IAAI,CAAC;AACnE,CAAC,CAAC;AACF,OAAO,MAAMU,gCAAgC,GAAGxC,cAAc,CAAC,CAAC+B,4BAA4B,EAAEJ,6BAA6B,EAAE,CAACY,CAAC,EAAEhB,QAAQ,KAAKA,QAAQ,CAAC,EAAEjB,mBAAmB,CAAC;AAC7K,OAAO,MAAMmC,0BAA0B,GAAGzC,cAAc,CAAC,CAAC+B,4BAA4B,EAAEJ,6BAA6B,EAAE,CAACY,CAAC,EAAEhB,QAAQ,KAAKA,QAAQ,CAAC,EAAElB,aAAa,CAAC;AACjK,OAAO,MAAMqC,8BAA8B,GAAG1C,cAAc,CAAC,CAAC+B,4BAA4B,EAAEJ,6BAA6B,EAAE,CAACY,CAAC,EAAEhB,QAAQ,KAAKA,QAAQ,CAAC,EAAEnB,oBAAoB,CAAC;AAC5K,OAAO,MAAMuC,kCAAkC,GAAG3C,cAAc,CAAC,CAAC+B,4BAA4B,EAAEJ,6BAA6B,EAAE,CAACY,CAAC,EAAEhB,QAAQ,KAAKA,QAAQ,CAAC,EAAEpB,wBAAwB,CAAC;AACpL,OAAO,MAAMyC,qBAAqB,GAAG5C,cAAc,CAAC,CAAC+B,4BAA4B,EAAEJ,6BAA6B,EAAE,CAACY,CAAC,EAAET,IAAI,KAAKA,IAAI,CAAC,EAAE,SAASc,qBAAqBA,CAAClB,cAAc,EAAEO,eAAe,EAAEH,IAAI,EAAE;EAC1M,OAAO5B,aAAa,CAACwB,cAAc,EAAEO,eAAe,CAAC,CAACH,IAAI,CAAC;AAC7D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}