{"ast":null,"code":"import * as React from 'react';\nimport useId from '@mui/utils/useId';\nimport { ChartStore } from \"../plugins/utils/ChartStore.js\";\nimport { CHART_CORE_PLUGINS } from \"../plugins/corePlugins/index.js\";\nimport { extractPluginParamsFromProps } from \"./extractPluginParamsFromProps.js\";\nlet globalId = 0;\n\n/**\n * This is the main hook that setups the plugin system for the chart.\n *\n * It manages the data used to create the charts.\n *\n * @param inPlugins All the plugins that will be used in the chart.\n * @param props The props passed to the chart.\n * @param seriesConfig The set of helpers used for series-specific computation.\n */\nexport function useCharts(inPlugins, props, seriesConfig) {\n  const chartId = useId();\n  const plugins = React.useMemo(() => [...CHART_CORE_PLUGINS, ...inPlugins], [inPlugins]);\n  const pluginParams = extractPluginParamsFromProps({\n    plugins,\n    props\n  });\n  pluginParams.id = pluginParams.id ?? chartId;\n  const instanceRef = React.useRef({});\n  const instance = instanceRef.current;\n  const publicAPI = useChartApiInitialization(props.apiRef);\n  const innerChartRootRef = React.useRef(null);\n  const innerSvgRef = React.useRef(null);\n  const storeRef = React.useRef(null);\n  if (storeRef.current == null) {\n    // eslint-disable-next-line react-compiler/react-compiler\n    globalId += 1;\n    const initialState = {\n      cacheKey: {\n        id: globalId\n      }\n    };\n    plugins.forEach(plugin => {\n      if (plugin.getInitialState) {\n        Object.assign(initialState, plugin.getInitialState(pluginParams, initialState, seriesConfig));\n      }\n    });\n    storeRef.current = new ChartStore(initialState);\n  }\n  const runPlugin = plugin => {\n    const pluginResponse = plugin({\n      instance,\n      params: pluginParams,\n      plugins: plugins,\n      store: storeRef.current,\n      svgRef: innerSvgRef,\n      chartRootRef: innerChartRootRef,\n      seriesConfig\n    });\n    if (pluginResponse.publicAPI) {\n      Object.assign(publicAPI.current, pluginResponse.publicAPI);\n    }\n    if (pluginResponse.instance) {\n      Object.assign(instance, pluginResponse.instance);\n    }\n  };\n  plugins.forEach(runPlugin);\n  const contextValue = React.useMemo(() => ({\n    store: storeRef.current,\n    publicAPI: publicAPI.current,\n    instance,\n    svgRef: innerSvgRef,\n    chartRootRef: innerChartRootRef\n  }), [instance, publicAPI]);\n  return {\n    contextValue\n  };\n}\nfunction initializeInputApiRef(inputApiRef) {\n  if (inputApiRef.current == null) {\n    inputApiRef.current = {};\n  }\n  return inputApiRef;\n}\nexport function useChartApiInitialization(inputApiRef) {\n  const fallbackPublicApiRef = React.useRef({});\n  if (inputApiRef) {\n    return initializeInputApiRef(inputApiRef);\n  }\n  return fallbackPublicApiRef;\n}","map":{"version":3,"names":["React","useId","ChartStore","CHART_CORE_PLUGINS","extractPluginParamsFromProps","globalId","useCharts","inPlugins","props","seriesConfig","chartId","plugins","useMemo","pluginParams","id","instanceRef","useRef","instance","current","publicAPI","useChartApiInitialization","apiRef","innerChartRootRef","innerSvgRef","storeRef","initialState","cacheKey","forEach","plugin","getInitialState","Object","assign","runPlugin","pluginResponse","params","store","svgRef","chartRootRef","contextValue","initializeInputApiRef","inputApiRef","fallbackPublicApiRef"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/store/useCharts.js"],"sourcesContent":["import * as React from 'react';\nimport useId from '@mui/utils/useId';\nimport { ChartStore } from \"../plugins/utils/ChartStore.js\";\nimport { CHART_CORE_PLUGINS } from \"../plugins/corePlugins/index.js\";\nimport { extractPluginParamsFromProps } from \"./extractPluginParamsFromProps.js\";\nlet globalId = 0;\n\n/**\n * This is the main hook that setups the plugin system for the chart.\n *\n * It manages the data used to create the charts.\n *\n * @param inPlugins All the plugins that will be used in the chart.\n * @param props The props passed to the chart.\n * @param seriesConfig The set of helpers used for series-specific computation.\n */\nexport function useCharts(inPlugins, props, seriesConfig) {\n  const chartId = useId();\n  const plugins = React.useMemo(() => [...CHART_CORE_PLUGINS, ...inPlugins], [inPlugins]);\n  const pluginParams = extractPluginParamsFromProps({\n    plugins,\n    props\n  });\n  pluginParams.id = pluginParams.id ?? chartId;\n  const instanceRef = React.useRef({});\n  const instance = instanceRef.current;\n  const publicAPI = useChartApiInitialization(props.apiRef);\n  const innerChartRootRef = React.useRef(null);\n  const innerSvgRef = React.useRef(null);\n  const storeRef = React.useRef(null);\n  if (storeRef.current == null) {\n    // eslint-disable-next-line react-compiler/react-compiler\n    globalId += 1;\n    const initialState = {\n      cacheKey: {\n        id: globalId\n      }\n    };\n    plugins.forEach(plugin => {\n      if (plugin.getInitialState) {\n        Object.assign(initialState, plugin.getInitialState(pluginParams, initialState, seriesConfig));\n      }\n    });\n    storeRef.current = new ChartStore(initialState);\n  }\n  const runPlugin = plugin => {\n    const pluginResponse = plugin({\n      instance,\n      params: pluginParams,\n      plugins: plugins,\n      store: storeRef.current,\n      svgRef: innerSvgRef,\n      chartRootRef: innerChartRootRef,\n      seriesConfig\n    });\n    if (pluginResponse.publicAPI) {\n      Object.assign(publicAPI.current, pluginResponse.publicAPI);\n    }\n    if (pluginResponse.instance) {\n      Object.assign(instance, pluginResponse.instance);\n    }\n  };\n  plugins.forEach(runPlugin);\n  const contextValue = React.useMemo(() => ({\n    store: storeRef.current,\n    publicAPI: publicAPI.current,\n    instance,\n    svgRef: innerSvgRef,\n    chartRootRef: innerChartRootRef\n  }), [instance, publicAPI]);\n  return {\n    contextValue\n  };\n}\nfunction initializeInputApiRef(inputApiRef) {\n  if (inputApiRef.current == null) {\n    inputApiRef.current = {};\n  }\n  return inputApiRef;\n}\nexport function useChartApiInitialization(inputApiRef) {\n  const fallbackPublicApiRef = React.useRef({});\n  if (inputApiRef) {\n    return initializeInputApiRef(inputApiRef);\n  }\n  return fallbackPublicApiRef;\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,4BAA4B,QAAQ,mCAAmC;AAChF,IAAIC,QAAQ,GAAG,CAAC;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAE;EACxD,MAAMC,OAAO,GAAGT,KAAK,CAAC,CAAC;EACvB,MAAMU,OAAO,GAAGX,KAAK,CAACY,OAAO,CAAC,MAAM,CAAC,GAAGT,kBAAkB,EAAE,GAAGI,SAAS,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EACvF,MAAMM,YAAY,GAAGT,4BAA4B,CAAC;IAChDO,OAAO;IACPH;EACF,CAAC,CAAC;EACFK,YAAY,CAACC,EAAE,GAAGD,YAAY,CAACC,EAAE,IAAIJ,OAAO;EAC5C,MAAMK,WAAW,GAAGf,KAAK,CAACgB,MAAM,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMC,QAAQ,GAAGF,WAAW,CAACG,OAAO;EACpC,MAAMC,SAAS,GAAGC,yBAAyB,CAACZ,KAAK,CAACa,MAAM,CAAC;EACzD,MAAMC,iBAAiB,GAAGtB,KAAK,CAACgB,MAAM,CAAC,IAAI,CAAC;EAC5C,MAAMO,WAAW,GAAGvB,KAAK,CAACgB,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMQ,QAAQ,GAAGxB,KAAK,CAACgB,MAAM,CAAC,IAAI,CAAC;EACnC,IAAIQ,QAAQ,CAACN,OAAO,IAAI,IAAI,EAAE;IAC5B;IACAb,QAAQ,IAAI,CAAC;IACb,MAAMoB,YAAY,GAAG;MACnBC,QAAQ,EAAE;QACRZ,EAAE,EAAET;MACN;IACF,CAAC;IACDM,OAAO,CAACgB,OAAO,CAACC,MAAM,IAAI;MACxB,IAAIA,MAAM,CAACC,eAAe,EAAE;QAC1BC,MAAM,CAACC,MAAM,CAACN,YAAY,EAAEG,MAAM,CAACC,eAAe,CAAChB,YAAY,EAAEY,YAAY,EAAEhB,YAAY,CAAC,CAAC;MAC/F;IACF,CAAC,CAAC;IACFe,QAAQ,CAACN,OAAO,GAAG,IAAIhB,UAAU,CAACuB,YAAY,CAAC;EACjD;EACA,MAAMO,SAAS,GAAGJ,MAAM,IAAI;IAC1B,MAAMK,cAAc,GAAGL,MAAM,CAAC;MAC5BX,QAAQ;MACRiB,MAAM,EAAErB,YAAY;MACpBF,OAAO,EAAEA,OAAO;MAChBwB,KAAK,EAAEX,QAAQ,CAACN,OAAO;MACvBkB,MAAM,EAAEb,WAAW;MACnBc,YAAY,EAAEf,iBAAiB;MAC/Bb;IACF,CAAC,CAAC;IACF,IAAIwB,cAAc,CAACd,SAAS,EAAE;MAC5BW,MAAM,CAACC,MAAM,CAACZ,SAAS,CAACD,OAAO,EAAEe,cAAc,CAACd,SAAS,CAAC;IAC5D;IACA,IAAIc,cAAc,CAAChB,QAAQ,EAAE;MAC3Ba,MAAM,CAACC,MAAM,CAACd,QAAQ,EAAEgB,cAAc,CAAChB,QAAQ,CAAC;IAClD;EACF,CAAC;EACDN,OAAO,CAACgB,OAAO,CAACK,SAAS,CAAC;EAC1B,MAAMM,YAAY,GAAGtC,KAAK,CAACY,OAAO,CAAC,OAAO;IACxCuB,KAAK,EAAEX,QAAQ,CAACN,OAAO;IACvBC,SAAS,EAAEA,SAAS,CAACD,OAAO;IAC5BD,QAAQ;IACRmB,MAAM,EAAEb,WAAW;IACnBc,YAAY,EAAEf;EAChB,CAAC,CAAC,EAAE,CAACL,QAAQ,EAAEE,SAAS,CAAC,CAAC;EAC1B,OAAO;IACLmB;EACF,CAAC;AACH;AACA,SAASC,qBAAqBA,CAACC,WAAW,EAAE;EAC1C,IAAIA,WAAW,CAACtB,OAAO,IAAI,IAAI,EAAE;IAC/BsB,WAAW,CAACtB,OAAO,GAAG,CAAC,CAAC;EAC1B;EACA,OAAOsB,WAAW;AACpB;AACA,OAAO,SAASpB,yBAAyBA,CAACoB,WAAW,EAAE;EACrD,MAAMC,oBAAoB,GAAGzC,KAAK,CAACgB,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7C,IAAIwB,WAAW,EAAE;IACf,OAAOD,qBAAqB,CAACC,WAAW,CAAC;EAC3C;EACA,OAAOC,oBAAoB;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}