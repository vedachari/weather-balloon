{"ast":null,"code":"'use client';\n\nimport { selectorChartSeriesConfig } from \"../internals/plugins/corePlugins/useChartSeries/index.js\";\nimport { useSeries } from \"./useSeries.js\";\nimport { useStore } from \"../internals/store/useStore.js\";\nimport { useSelector } from \"../internals/store/useSelector.js\";\nfunction getSeriesToDisplay(series, seriesConfig) {\n  return Object.keys(series).flatMap(seriesType => {\n    const getter = seriesConfig[seriesType].legendGetter;\n    return getter === undefined ? [] : getter(series[seriesType]);\n  });\n}\n\n/**\n * Get the legend items to display.\n *\n * This hook is used by the `ChartsLegend` component. And will return the legend items formatted for display.\n *\n * An alternative is to use the `useSeries` hook and format the legend items yourself.\n *\n * @returns legend data\n */\nexport function useLegend() {\n  const series = useSeries();\n  const store = useStore();\n  const seriesConfig = useSelector(store, selectorChartSeriesConfig);\n  return {\n    items: getSeriesToDisplay(series, seriesConfig)\n  };\n}","map":{"version":3,"names":["selectorChartSeriesConfig","useSeries","useStore","useSelector","getSeriesToDisplay","series","seriesConfig","Object","keys","flatMap","seriesType","getter","legendGetter","undefined","useLegend","store","items"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/hooks/useLegend.js"],"sourcesContent":["'use client';\n\nimport { selectorChartSeriesConfig } from \"../internals/plugins/corePlugins/useChartSeries/index.js\";\nimport { useSeries } from \"./useSeries.js\";\nimport { useStore } from \"../internals/store/useStore.js\";\nimport { useSelector } from \"../internals/store/useSelector.js\";\nfunction getSeriesToDisplay(series, seriesConfig) {\n  return Object.keys(series).flatMap(seriesType => {\n    const getter = seriesConfig[seriesType].legendGetter;\n    return getter === undefined ? [] : getter(series[seriesType]);\n  });\n}\n\n/**\n * Get the legend items to display.\n *\n * This hook is used by the `ChartsLegend` component. And will return the legend items formatted for display.\n *\n * An alternative is to use the `useSeries` hook and format the legend items yourself.\n *\n * @returns legend data\n */\nexport function useLegend() {\n  const series = useSeries();\n  const store = useStore();\n  const seriesConfig = useSelector(store, selectorChartSeriesConfig);\n  return {\n    items: getSeriesToDisplay(series, seriesConfig)\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,yBAAyB,QAAQ,0DAA0D;AACpG,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,kBAAkBA,CAACC,MAAM,EAAEC,YAAY,EAAE;EAChD,OAAOC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,OAAO,CAACC,UAAU,IAAI;IAC/C,MAAMC,MAAM,GAAGL,YAAY,CAACI,UAAU,CAAC,CAACE,YAAY;IACpD,OAAOD,MAAM,KAAKE,SAAS,GAAG,EAAE,GAAGF,MAAM,CAACN,MAAM,CAACK,UAAU,CAAC,CAAC;EAC/D,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,SAASA,CAAA,EAAG;EAC1B,MAAMT,MAAM,GAAGJ,SAAS,CAAC,CAAC;EAC1B,MAAMc,KAAK,GAAGb,QAAQ,CAAC,CAAC;EACxB,MAAMI,YAAY,GAAGH,WAAW,CAACY,KAAK,EAAEf,yBAAyB,CAAC;EAClE,OAAO;IACLgB,KAAK,EAAEZ,kBAAkB,CAACC,MAAM,EAAEC,YAAY;EAChD,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}