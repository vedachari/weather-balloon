{"ast":null,"code":"var _jsxFileName = \"/Users/vedachari/projects/weather-balloon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BalloonMap from \"./components/BalloonMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [balloons, setBalloons] = useState([]);\n  useEffect(() => {\n    const fetchBalloons = async () => {\n      const res = await fetch(\"/treasure/00.json\"); // or your proxy\n      const json = await res.json();\n\n      // convert API data to {lat, lon, name} format\n      const mapped = json.map(b => ({\n        lat: b[0],\n        // latitude\n        lon: b[1],\n        // longitude\n        name: b[2] ? `Altitude: ${b[2]} m` : undefined // optional\n      }));\n      setBalloons(mapped);\n    };\n    fetchBalloons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BalloonMap, {\n    balloons: balloons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"re8NW6AM/rd/ZGwCQOMwjR+tzT0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BalloonMap","jsxDEV","_jsxDEV","App","_s","balloons","setBalloons","fetchBalloons","res","fetch","json","mapped","map","b","lat","lon","name","undefined","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vedachari/projects/weather-balloon/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BalloonMap from \"./components/BalloonMap\";\n\nconst App: React.FC = () => {\n  const [balloons, setBalloons] = useState<{ lat: number; lon: number; name?: string }[]>([]);\n\n  useEffect(() => {\n    const fetchBalloons = async () => {\n      const res = await fetch(\"/treasure/00.json\"); // or your proxy\n      const json = await res.json();\n\n      // convert API data to {lat, lon, name} format\n      const mapped = json.map((b: any) => ({\n        lat: b[0],   // latitude\n        lon: b[1],   // longitude\n        name: b[2] ? `Altitude: ${b[2]} m` : undefined, // optional\n      }));\n\n      setBalloons(mapped);\n    };\n\n    fetchBalloons();\n  }, []);\n\n  return <BalloonMap balloons={balloons} />;\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAgD,EAAE,CAAC;EAE3FD,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;MAC9C,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;;MAE7B;MACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAAEC,CAAM,KAAM;QACnCC,GAAG,EAAED,CAAC,CAAC,CAAC,CAAC;QAAI;QACbE,GAAG,EAAEF,CAAC,CAAC,CAAC,CAAC;QAAI;QACbG,IAAI,EAAEH,CAAC,CAAC,CAAC,CAAC,GAAG,aAAaA,CAAC,CAAC,CAAC,CAAC,IAAI,GAAGI,SAAS,CAAE;MAClD,CAAC,CAAC,CAAC;MAEHX,WAAW,CAACK,MAAM,CAAC;IACrB,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,OAAA,CAACF,UAAU;IAACK,QAAQ,EAAEA;EAAS;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;AAACjB,EAAA,CAtBID,GAAa;AAAAmB,EAAA,GAAbnB,GAAa;AAwBnB,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}