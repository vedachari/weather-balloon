{"ast":null,"code":"import { isCartesianSeriesType } from \"../../../isCartesian.js\";\nconst axisExtremumCallback = (chartType, axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters) => {\n  const getter = axisDirection === 'x' ? seriesConfig[chartType].xExtremumGetter : seriesConfig[chartType].yExtremumGetter;\n  const series = formattedSeries[chartType]?.series ?? {};\n  return getter?.({\n    series,\n    axis,\n    axisIndex,\n    isDefaultAxis: axisIndex === 0,\n    getFilters\n  }) ?? [Infinity, -Infinity];\n};\nexport function getAxisExtrema(axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters) {\n  const cartesianChartTypes = Object.keys(seriesConfig).filter(isCartesianSeriesType);\n  let extrema = [Infinity, -Infinity];\n  for (const chartType of cartesianChartTypes) {\n    const [min, max] = axisExtremumCallback(chartType, axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters);\n    extrema = [Math.min(extrema[0], min), Math.max(extrema[1], max)];\n  }\n  if (Number.isNaN(extrema[0]) || Number.isNaN(extrema[1])) {\n    return [Infinity, -Infinity];\n  }\n  return extrema;\n}","map":{"version":3,"names":["isCartesianSeriesType","axisExtremumCallback","chartType","axis","axisDirection","seriesConfig","axisIndex","formattedSeries","getFilters","getter","xExtremumGetter","yExtremumGetter","series","isDefaultAxis","Infinity","getAxisExtrema","cartesianChartTypes","Object","keys","filter","extrema","min","max","Math","Number","isNaN"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/plugins/featurePlugins/useChartCartesianAxis/getAxisExtrema.js"],"sourcesContent":["import { isCartesianSeriesType } from \"../../../isCartesian.js\";\nconst axisExtremumCallback = (chartType, axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters) => {\n  const getter = axisDirection === 'x' ? seriesConfig[chartType].xExtremumGetter : seriesConfig[chartType].yExtremumGetter;\n  const series = formattedSeries[chartType]?.series ?? {};\n  return getter?.({\n    series,\n    axis,\n    axisIndex,\n    isDefaultAxis: axisIndex === 0,\n    getFilters\n  }) ?? [Infinity, -Infinity];\n};\nexport function getAxisExtrema(axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters) {\n  const cartesianChartTypes = Object.keys(seriesConfig).filter(isCartesianSeriesType);\n  let extrema = [Infinity, -Infinity];\n  for (const chartType of cartesianChartTypes) {\n    const [min, max] = axisExtremumCallback(chartType, axis, axisDirection, seriesConfig, axisIndex, formattedSeries, getFilters);\n    extrema = [Math.min(extrema[0], min), Math.max(extrema[1], max)];\n  }\n  if (Number.isNaN(extrema[0]) || Number.isNaN(extrema[1])) {\n    return [Infinity, -Infinity];\n  }\n  return extrema;\n}"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,yBAAyB;AAC/D,MAAMC,oBAAoB,GAAGA,CAACC,SAAS,EAAEC,IAAI,EAAEC,aAAa,EAAEC,YAAY,EAAEC,SAAS,EAAEC,eAAe,EAAEC,UAAU,KAAK;EACrH,MAAMC,MAAM,GAAGL,aAAa,KAAK,GAAG,GAAGC,YAAY,CAACH,SAAS,CAAC,CAACQ,eAAe,GAAGL,YAAY,CAACH,SAAS,CAAC,CAACS,eAAe;EACxH,MAAMC,MAAM,GAAGL,eAAe,CAACL,SAAS,CAAC,EAAEU,MAAM,IAAI,CAAC,CAAC;EACvD,OAAOH,MAAM,GAAG;IACdG,MAAM;IACNT,IAAI;IACJG,SAAS;IACTO,aAAa,EAAEP,SAAS,KAAK,CAAC;IAC9BE;EACF,CAAC,CAAC,IAAI,CAACM,QAAQ,EAAE,CAACA,QAAQ,CAAC;AAC7B,CAAC;AACD,OAAO,SAASC,cAAcA,CAACZ,IAAI,EAAEC,aAAa,EAAEC,YAAY,EAAEC,SAAS,EAAEC,eAAe,EAAEC,UAAU,EAAE;EACxG,MAAMQ,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAACb,YAAY,CAAC,CAACc,MAAM,CAACnB,qBAAqB,CAAC;EACnF,IAAIoB,OAAO,GAAG,CAACN,QAAQ,EAAE,CAACA,QAAQ,CAAC;EACnC,KAAK,MAAMZ,SAAS,IAAIc,mBAAmB,EAAE;IAC3C,MAAM,CAACK,GAAG,EAAEC,GAAG,CAAC,GAAGrB,oBAAoB,CAACC,SAAS,EAAEC,IAAI,EAAEC,aAAa,EAAEC,YAAY,EAAEC,SAAS,EAAEC,eAAe,EAAEC,UAAU,CAAC;IAC7HY,OAAO,GAAG,CAACG,IAAI,CAACF,GAAG,CAACD,OAAO,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,EAAEE,IAAI,CAACD,GAAG,CAACF,OAAO,CAAC,CAAC,CAAC,EAAEE,GAAG,CAAC,CAAC;EAClE;EACA,IAAIE,MAAM,CAACC,KAAK,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC,IAAII,MAAM,CAACC,KAAK,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;IACxD,OAAO,CAACN,QAAQ,EAAE,CAACA,QAAQ,CAAC;EAC9B;EACA,OAAOM,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}