{"ast":null,"code":"var _jsxFileName = \"/Users/vedachari/projects/weather-balloon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Map from './components/Map';\nimport Slider from './components/Slider';\nimport Meteo from './components/Meteo';\nimport Balloon from \"./components/Balloon\";\nimport { fetchWeatherApi } from 'openmeteo';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*basic flow\n- get hour 0 and display all\n- if user enters balloon/ generates random number: switch to single balloon\n- user can switch back to see all balloons at that time\n- hour changes using slider: stays consistent across time toggle */\n\nconst App = () => {\n  _s();\n  //states\n  const [allBalloons, setAllBalloons] = useState(true); //currently viewing all balloons?\n  const [getWeather, setGetWeather] = useState(false); //should fetch weather for balloon\n  //data\n  const [rand, setRand] = useState(null);\n  const randRef = useRef(rand);\n  const [data, setData] = useState(null); //all balloons\n  const [balloon, setBalloon] = useState(null);\n  const [hour, setHour] = useState(-1);\n  const [weatherData, setWeatherData] = useState(null); // weather data for #rand balloon\n\n  //change rand ref\n  useEffect(() => {\n    randRef.current = rand;\n  }, [rand]);\n\n  // Generate initial rand = 1\n  useEffect(() => {\n    setHour(0);\n    setRand(1);\n  }, []);\n\n  // Log whenever rand changes\n  useEffect(() => {\n    // console.log(\"Random index chosen:\", rand);\n    setGetWeather(!getWeather);\n  }, [rand]);\n  useEffect(() => {\n    // setWeatherData(null);\n\n    // Update balloon reference\n    if (data && rand !== null) {\n      setBalloon(data[rand]);\n    }\n  }, [rand, data]);\n\n  // Handler for \"New Random Balloon\" button\n  const handleNewBalloon = () => {\n    // choose random balloon\n    const r = Math.floor(Math.random() * 1000);\n    if (data) {\n      setBalloon(data[r]);\n      setGetWeather(true);\n      // console.log(\"Changed get weather to true\");\n      setWeatherData(null);\n    }\n    ;\n    setAllBalloons(false);\n    setRand(r);\n  };\n\n  // Handler for \"switch view\" button\n  const handleSwitchView = () => {\n    // console.log('All balloons now ', !allBalloons);\n    setAllBalloons(!allBalloons); //switch view\n    if (weatherData == null) {\n      setGetWeather(true);\n    }\n  };\n\n  // Hour changed so get new balloon values\n  useEffect(() => {\n    const fetchBalloons = async () => {\n      try {\n        if (hour > 24 || hour < 0) {\n          return;\n        }\n        ;\n        // console.log(\"fetching hour %d\", hour);\n        const res = await fetch(`/api/treasure/get/${hour}`);\n        if (!res.ok) {\n          setHour(hour + 1);\n          throw new Error(\"Failed to fetch data\");\n        }\n        ;\n        const json = await res.json();\n\n        // convert API data to {lat, lon} format\n        const mapped = json.map(b => ({\n          lat: b[0],\n          lon: b[1],\n          alt: b[2]\n        }));\n        // console.log(mapped[randRef.current!]);\n\n        setData(mapped);\n        setBalloon(mapped[randRef.current]);\n      } catch (err) {\n        // console.error(err);\n      }\n    };\n    if (randRef.current === null) {\n      // console.log(\"rand not chosen\");\n      return;\n    } else {\n      fetchBalloons();\n    }\n    ;\n  }, [hour]);\n\n  // //get weather data: put here to all fewer times\n  useEffect(() => {\n    const fetchWeather = async () => {\n      // console.log(\"getting weather\");\n      if ((balloon === null || balloon === void 0 ? void 0 : balloon.lat) == null || (balloon === null || balloon === void 0 ? void 0 : balloon.lon) == null) {\n        return;\n      }\n      const maxRetries = 3;\n      const wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n      for (let attempt = 1; attempt <= maxRetries; attempt++) {\n        console.log('attempt # ', attempt);\n        try {\n          const params = {\n            latitude: balloon.lat,\n            longitude: balloon.lon,\n            daily: [\"temperature_2m_max\", \"temperature_2m_min\"],\n            hourly: [\"temperature_2m\", \"relative_humidity_2m\", \"precipitation_probability\", \"precipitation\"],\n            timezone: \"auto\",\n            forecast_days: 1\n          };\n          const url = \"https://api.open-meteo.com/v1/forecast\";\n          const responses = await fetchWeatherApi(url, params);\n          const response = responses[0];\n          // console.log('response',response);\n\n          // Attributes\n          const utcOffsetSeconds = response.utcOffsetSeconds();\n          const hourly = response.hourly();\n          const daily = response.daily();\n          const data = {\n            latitude: response.latitude(),\n            longitude: response.longitude(),\n            elevation: response.elevation(),\n            utcOffsetSeconds: response.utcOffsetSeconds(),\n            timezone: response.timezone(),\n            timezone_abbreviation: response.timezoneAbbreviation(),\n            hourly: {\n              time: [...Array((Number(hourly.timeEnd()) - Number(hourly.time())) / hourly.interval())].map((_, i) => new Date((Number(hourly.time()) + i * hourly.interval() + utcOffsetSeconds) * 1000)),\n              temperature_2m: hourly.variables(0).valuesArray(),\n              relative_humidity_2m: hourly.variables(1).valuesArray(),\n              precipitation_probability: hourly.variables(2).valuesArray(),\n              precipitation: hourly.variables(3).valuesArray()\n            },\n            daily: {\n              time: [...Array((Number(daily.timeEnd()) - Number(daily.time())) / daily.interval())].map((_, i) => new Date((Number(daily.time()) + i * daily.interval() + utcOffsetSeconds) * 1000)),\n              temperature_2m_max: daily.variables(0).valuesArray(),\n              temperature_2m_min: daily.variables(1).valuesArray()\n            }\n          };\n          console.log(`\\nCoordinates: ${data.latitude}°N ${data.longitude}°E`, `\\nElevation: ${data.elevation}m asl`, `\\nTimezone difference to GMT+0: ${data.utcOffsetSeconds}s`, `\\nTimezone: ${data.timezone}s`);\n          // console.log(\"\\nHourly data\", data.hourly)\n          // console.log(\"\\nDaily data\", data.daily)\n          setWeatherData(data);\n          setGetWeather(false);\n          attempt = maxRetries;\n        } catch (error) {\n          console.error(\"Failed to fetch weather data:\", error);\n          if (attempt < maxRetries) await wait(2000); // wait before retry\n        }\n      }\n    };\n    if (getWeather) fetchWeather();\n  }, [getWeather]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"View the WindBorne Systems Balloons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contianer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map\",\n            children: data && /*#__PURE__*/_jsxDEV(Map, {\n              rand: rand,\n              allBalloons: allBalloons,\n              balloons: data,\n              setRand: setRand,\n              setWeatherData: setWeatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"link\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Key:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"link\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 39\n              }, this), \" Altitude under 10 km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"link\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 39\n              }, this), \" Altitude over 10 km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-API\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"link\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"API Sources:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://windbornesystems.com\",\n              className: \"link\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Windborne Systems\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://open-meteo.com\",\n              className: \"link\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Open Meteo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Choose a random balloon to see weather data!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNewBalloon,\n              className: \"generate-button\",\n              children: \"Show Random Balloon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click to show individual/all balloons.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), allBalloons && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSwitchView,\n              className: \"generate-button\",\n              children: [\"Show Balloon # \", rand]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 34\n            }, this), !allBalloons && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSwitchView,\n              className: \"generate-button\",\n              children: \"Show all balloons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              hour: hour,\n              setHour: setHour\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Weather On Ground\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Meteo, {\n              weatherData: weatherData,\n              hour: hour,\n              alt: balloon === null || balloon === void 0 ? void 0 : balloon.alt,\n              rand: rand\n            }, rand, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 18\n          }, this), !weatherData && rand !== null && rand > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Balloon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aQnSkWSk7Mwkc6XF9ebijGTVnAw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Map","Slider","Meteo","Balloon","fetchWeatherApi","jsxDEV","_jsxDEV","App","_s","allBalloons","setAllBalloons","getWeather","setGetWeather","rand","setRand","randRef","data","setData","balloon","setBalloon","hour","setHour","weatherData","setWeatherData","current","handleNewBalloon","r","Math","floor","random","handleSwitchView","fetchBalloons","res","fetch","ok","Error","json","mapped","map","b","lat","lon","alt","err","fetchWeather","maxRetries","wait","ms","Promise","resolve","setTimeout","attempt","console","log","params","latitude","longitude","daily","hourly","timezone","forecast_days","url","responses","response","utcOffsetSeconds","elevation","timezone_abbreviation","timezoneAbbreviation","time","Array","Number","timeEnd","interval","_","i","Date","temperature_2m","variables","valuesArray","relative_humidity_2m","precipitation_probability","precipitation","temperature_2m_max","temperature_2m_min","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","balloons","href","onClick","_c","$RefreshReg$"],"sources":["/Users/vedachari/projects/weather-balloon/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Map from './components/Map';\nimport Slider from './components/Slider';\nimport Meteo from './components/Meteo';\nimport Balloon from \"./components/Balloon\";\nimport { fetchWeatherApi } from 'openmeteo';\nimport \"./App.css\";\n\ntype Balloon = {\n  lat: number;\n  lon: number;\n  alt: number;\n};\n\n/*basic flow\n- get hour 0 and display all\n- if user enters balloon/ generates random number: switch to single balloon\n- user can switch back to see all balloons at that time\n- hour changes using slider: stays consistent across time toggle */\n\nconst App: React.FC = () => {\n  //states\n  const [allBalloons, setAllBalloons] = useState<boolean>(true); //currently viewing all balloons?\n  const [getWeather, setGetWeather] = useState<boolean>(false); //should fetch weather for balloon\n  //data\n  const [rand, setRand] = useState<number | null>(null);\n  const randRef = useRef(rand);\n  const [data, setData] = useState<Balloon[] | null> (null); //all balloons\n  const [balloon, setBalloon] = useState<Balloon|null>(null);\n  const [hour, setHour] = useState< number>(-1);\n  const [weatherData, setWeatherData] = useState<any>(null); // weather data for #rand balloon\n\n  //change rand ref\n  useEffect(() => {\n    randRef.current = rand;\n  }, [rand]);\n\n  // Generate initial rand = 1\n  useEffect(() => {\n    setHour(0);\n    setRand(1);\n  }, []);\n\n  // Log whenever rand changes\n  useEffect(() => {\n    // console.log(\"Random index chosen:\", rand);\n    setGetWeather(!getWeather);\n  }, [rand]);\n\n  useEffect(() => {\n    // setWeatherData(null);\n\n    // Update balloon reference\n    if (data && rand !== null) {\n      setBalloon(data[rand]);\n    }\n  }, [rand, data]);\n\n  // Handler for \"New Random Balloon\" button\n  const handleNewBalloon = () => {\n    // choose random balloon\n    const r = Math.floor(Math.random() * 1000);\n    if (data){\n      setBalloon(data[r]);\n      setGetWeather(true);\n      // console.log(\"Changed get weather to true\");\n      setWeatherData(null);\n    };\n    setAllBalloons(false);\n    setRand(r);\n  };\n\n  // Handler for \"switch view\" button\n  const handleSwitchView = () => {\n    // console.log('All balloons now ', !allBalloons);\n    setAllBalloons(!allBalloons); //switch view\n    if(weatherData == null){\n      setGetWeather(true);\n    }\n  };\n\n\n  // Hour changed so get new balloon values\n  useEffect(() => {\n      const fetchBalloons = async () => {\n        try {\n          if(hour > 24 || hour < 0){\n            return;\n          };\n          // console.log(\"fetching hour %d\", hour);\n          const res = await fetch(`/api/treasure/get/${hour}`);\n          if (!res.ok){ \n            setHour(hour+1);\n            throw new Error(\"Failed to fetch data\");\n          };\n  \n          const json = await res.json();\n  \n          // convert API data to {lat, lon} format\n          const mapped = json.map((b: any) => ({\n            lat: b[0],\n            lon: b[1],\n            alt: b[2],\n          }));\n          // console.log(mapped[randRef.current!]);\n\n          setData(mapped);\n          setBalloon(mapped[randRef.current!]);\n        } catch (err) {\n          // console.error(err);\n        }\n      };\n      if (randRef.current === null){\n          // console.log(\"rand not chosen\");\n          return;\n      }else{\n        fetchBalloons();\n      };\n    }, [hour]);\n\n    // //get weather data: put here to all fewer times\n    useEffect(() => {\n        const fetchWeather = async () => {\n          // console.log(\"getting weather\");\n            if(balloon?.lat == null || balloon?.lon == null){\n              return\n            }\n            const maxRetries = 3;\n            const wait = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n            for (let attempt = 1; attempt <= maxRetries; attempt++) {\n              console.log('attempt # ', attempt)\n                try {\n                  const params = {\n                    latitude: balloon.lat,\n                    longitude: balloon.lon,\n                    daily: [\"temperature_2m_max\", \"temperature_2m_min\"],\n                    hourly: [\"temperature_2m\", \"relative_humidity_2m\", \"precipitation_probability\", \"precipitation\"],\n                    timezone: \"auto\",\n                    forecast_days: 1,\n                  };\n                  const url = \"https://api.open-meteo.com/v1/forecast\";\n                  const responses = await fetchWeatherApi(url, params);\n\n                  const response = responses[0];\n                  // console.log('response',response);\n\n                  // Attributes\n                  const utcOffsetSeconds = response.utcOffsetSeconds();\n\n                  const hourly = response.hourly()!;\n                  const daily = response.daily()!;\n\n                  const data = {\n                      latitude: response.latitude(),\n                      longitude: response.longitude(),\n                      elevation: response.elevation(),\n                      utcOffsetSeconds: response.utcOffsetSeconds(),\n                      timezone: response.timezone(),\n                      timezone_abbreviation: response.timezoneAbbreviation(),\n                      hourly: {\n                          time: [...Array((Number(hourly.timeEnd()) - Number(hourly.time())) / hourly.interval())].map(\n                              (_, i) => new Date((Number(hourly.time()) + i * hourly.interval() + utcOffsetSeconds) * 1000)\n                          ),\n                          temperature_2m: hourly.variables(0)!.valuesArray(),\n                          relative_humidity_2m: hourly.variables(1)!.valuesArray(),\n                          precipitation_probability: hourly.variables(2)!.valuesArray(),\n                          precipitation: hourly.variables(3)!.valuesArray(),\n                      },\n                      daily: {\n                          time: [...Array((Number(daily.timeEnd()) - Number(daily.time())) / daily.interval())].map(\n                              (_, i) => new Date((Number(daily.time()) + i * daily.interval() + utcOffsetSeconds) * 1000)\n                          ),\n                          temperature_2m_max: daily.variables(0)!.valuesArray(),\n                          temperature_2m_min: daily.variables(1)!.valuesArray(),\n                      },\n                  };\n                  console.log(\n                      `\\nCoordinates: ${data.latitude}°N ${data.longitude}°E`,\n                      `\\nElevation: ${data.elevation}m asl`,\n                      `\\nTimezone difference to GMT+0: ${data.utcOffsetSeconds}s`,\n                      `\\nTimezone: ${data.timezone}s`,\n                  );\n                  // console.log(\"\\nHourly data\", data.hourly)\n                  // console.log(\"\\nDaily data\", data.daily)\n                  setWeatherData(data);\n                  setGetWeather(false);\n                  attempt = maxRetries;\n                } catch (error) {\n                    console.error(\"Failed to fetch weather data:\", error);\n                    if (attempt < maxRetries) await wait(2000); // wait before retry\n                }\n            }\n        };\n        if(getWeather) fetchWeather();\n    }, [getWeather]);\n\n  return (\n    <div>\n      <div className=\"App-header\">\n        <h1>View the WindBorne Systems Balloons</h1>\n      </div>\n      <div >\n        <div className=\"contianer\">\n          {/* Map container */}\n            <div className=\"map-container\">\n                <div className=\"map\">\n                  {data && (<Map rand={rand} allBalloons= {allBalloons} balloons={data}  setRand = {setRand} setWeatherData = {setWeatherData}/>)}\n                </div>\n                <div className=\"legend\">\n                  <p className=\"link\"><strong>Key:</strong></p>\n                  <p className=\"link\"><span className=\"dot red\"></span> Altitude under 10 km</p>\n                  <p className=\"link\"><span className=\"dot black\"></span> Altitude over 10 km</p>\n                </div>\n                <div className=\"legend-API\">\n                  <p className=\"link\"><strong>API Sources:</strong></p>\n                  <a href=\"https://windbornesystems.com\" className=\"link\">\n                      <strong>Windborne Systems</strong>\n                  </a>\n                  <a href=\"https://open-meteo.com\"className=\"link\">\n                       <strong>Open Meteo</strong>\n                  </a>\n                </div>\n\n            </div>\n            <div className=\"info-container\">\n              {/* Button at the top */}\n              <div className=\"button\">\n                <p>Choose a random balloon to see weather data!</p>\n                <button onClick={handleNewBalloon} className=\"generate-button\">\n                  Show Random Balloon\n                </button>\n                <p>Click to show individual/all balloons.</p>\n                {allBalloons && (<button onClick={handleSwitchView} className=\"generate-button\">\n                  Show Balloon # {rand}\n                </button>)}\n                {!allBalloons && (<button onClick={handleSwitchView} className=\"generate-button\">\n                  Show all balloons\n                </button>)}\n              </div>\n              <div className=\"slider\">\n                <Slider \n                  hour = {hour}\n                  setHour = {setHour}/>\n              </div>\n              {weatherData && \n                (<div>\n                  <h1>Weather On Ground</h1>\n                  <Meteo key = {rand} weatherData = {weatherData} hour = {hour} alt = {balloon?.alt} rand = {rand}/>\n                </div>)}\n              {!weatherData && rand !== null && rand > 1 &&(<div>\n                  <Balloon/>\n                </div>)\n              }\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}