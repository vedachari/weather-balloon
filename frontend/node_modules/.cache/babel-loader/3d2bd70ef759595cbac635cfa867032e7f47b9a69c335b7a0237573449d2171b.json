{"ast":null,"code":"import { findMinMax } from \"../../internals/findMinMax.js\";\nconst createResult = (data, direction) => {\n  if (direction === 'x') {\n    return {\n      x: data,\n      y: null\n    };\n  }\n  return {\n    x: null,\n    y: data\n  };\n};\nconst getBaseExtremum = params => {\n  const {\n    axis,\n    getFilters,\n    isDefaultAxis\n  } = params;\n  const filter = getFilters?.({\n    currentAxisId: axis.id,\n    isDefaultAxis\n  });\n  const data = filter ? axis.data?.filter((_, i) => filter({\n    x: null,\n    y: null\n  }, i)) : axis.data;\n  return findMinMax(data ?? []);\n};\nconst getValueExtremum = direction => params => {\n  const {\n    series,\n    axis,\n    getFilters,\n    isDefaultAxis\n  } = params;\n  return Object.keys(series).filter(seriesId => {\n    const axisId = direction === 'x' ? series[seriesId].xAxisId : series[seriesId].yAxisId;\n    return axisId === axis.id || isDefaultAxis && axisId === undefined;\n  }).reduce((acc, seriesId) => {\n    const {\n      stackedData\n    } = series[seriesId];\n    const filter = getFilters?.({\n      currentAxisId: axis.id,\n      isDefaultAxis,\n      seriesXAxisId: series[seriesId].xAxisId,\n      seriesYAxisId: series[seriesId].yAxisId\n    });\n    const [seriesMin, seriesMax] = stackedData?.reduce((seriesAcc, values, index) => {\n      if (filter && (!filter(createResult(values[0], direction), index) || !filter(createResult(values[1], direction), index))) {\n        return seriesAcc;\n      }\n      return [Math.min(...values, seriesAcc[0]), Math.max(...values, seriesAcc[1])];\n    }, [Infinity, -Infinity]) ?? [Infinity, -Infinity];\n    return [Math.min(seriesMin, acc[0]), Math.max(seriesMax, acc[1])];\n  }, [Infinity, -Infinity]);\n};\nexport const getExtremumX = params => {\n  // Notice that bar should be all horizontal or all vertical.\n  // Don't think it's a problem for now\n  const isHorizontal = Object.keys(params.series).some(seriesId => params.series[seriesId].layout === 'horizontal');\n  if (isHorizontal) {\n    return getValueExtremum('x')(params);\n  }\n  return getBaseExtremum(params);\n};\nexport const getExtremumY = params => {\n  const isHorizontal = Object.keys(params.series).some(seriesId => params.series[seriesId].layout === 'horizontal');\n  if (isHorizontal) {\n    return getBaseExtremum(params);\n  }\n  return getValueExtremum('y')(params);\n};","map":{"version":3,"names":["findMinMax","createResult","data","direction","x","y","getBaseExtremum","params","axis","getFilters","isDefaultAxis","filter","currentAxisId","id","_","i","getValueExtremum","series","Object","keys","seriesId","axisId","xAxisId","yAxisId","undefined","reduce","acc","stackedData","seriesXAxisId","seriesYAxisId","seriesMin","seriesMax","seriesAcc","values","index","Math","min","max","Infinity","getExtremumX","isHorizontal","some","layout","getExtremumY"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/BarChart/seriesConfig/extremums.js"],"sourcesContent":["import { findMinMax } from \"../../internals/findMinMax.js\";\nconst createResult = (data, direction) => {\n  if (direction === 'x') {\n    return {\n      x: data,\n      y: null\n    };\n  }\n  return {\n    x: null,\n    y: data\n  };\n};\nconst getBaseExtremum = params => {\n  const {\n    axis,\n    getFilters,\n    isDefaultAxis\n  } = params;\n  const filter = getFilters?.({\n    currentAxisId: axis.id,\n    isDefaultAxis\n  });\n  const data = filter ? axis.data?.filter((_, i) => filter({\n    x: null,\n    y: null\n  }, i)) : axis.data;\n  return findMinMax(data ?? []);\n};\nconst getValueExtremum = direction => params => {\n  const {\n    series,\n    axis,\n    getFilters,\n    isDefaultAxis\n  } = params;\n  return Object.keys(series).filter(seriesId => {\n    const axisId = direction === 'x' ? series[seriesId].xAxisId : series[seriesId].yAxisId;\n    return axisId === axis.id || isDefaultAxis && axisId === undefined;\n  }).reduce((acc, seriesId) => {\n    const {\n      stackedData\n    } = series[seriesId];\n    const filter = getFilters?.({\n      currentAxisId: axis.id,\n      isDefaultAxis,\n      seriesXAxisId: series[seriesId].xAxisId,\n      seriesYAxisId: series[seriesId].yAxisId\n    });\n    const [seriesMin, seriesMax] = stackedData?.reduce((seriesAcc, values, index) => {\n      if (filter && (!filter(createResult(values[0], direction), index) || !filter(createResult(values[1], direction), index))) {\n        return seriesAcc;\n      }\n      return [Math.min(...values, seriesAcc[0]), Math.max(...values, seriesAcc[1])];\n    }, [Infinity, -Infinity]) ?? [Infinity, -Infinity];\n    return [Math.min(seriesMin, acc[0]), Math.max(seriesMax, acc[1])];\n  }, [Infinity, -Infinity]);\n};\nexport const getExtremumX = params => {\n  // Notice that bar should be all horizontal or all vertical.\n  // Don't think it's a problem for now\n  const isHorizontal = Object.keys(params.series).some(seriesId => params.series[seriesId].layout === 'horizontal');\n  if (isHorizontal) {\n    return getValueExtremum('x')(params);\n  }\n  return getBaseExtremum(params);\n};\nexport const getExtremumY = params => {\n  const isHorizontal = Object.keys(params.series).some(seriesId => params.series[seriesId].layout === 'horizontal');\n  if (isHorizontal) {\n    return getBaseExtremum(params);\n  }\n  return getValueExtremum('y')(params);\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,+BAA+B;AAC1D,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,SAAS,KAAK;EACxC,IAAIA,SAAS,KAAK,GAAG,EAAE;IACrB,OAAO;MACLC,CAAC,EAAEF,IAAI;MACPG,CAAC,EAAE;IACL,CAAC;EACH;EACA,OAAO;IACLD,CAAC,EAAE,IAAI;IACPC,CAAC,EAAEH;EACL,CAAC;AACH,CAAC;AACD,MAAMI,eAAe,GAAGC,MAAM,IAAI;EAChC,MAAM;IACJC,IAAI;IACJC,UAAU;IACVC;EACF,CAAC,GAAGH,MAAM;EACV,MAAMI,MAAM,GAAGF,UAAU,GAAG;IAC1BG,aAAa,EAAEJ,IAAI,CAACK,EAAE;IACtBH;EACF,CAAC,CAAC;EACF,MAAMR,IAAI,GAAGS,MAAM,GAAGH,IAAI,CAACN,IAAI,EAAES,MAAM,CAAC,CAACG,CAAC,EAAEC,CAAC,KAAKJ,MAAM,CAAC;IACvDP,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE;EACL,CAAC,EAAEU,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACN,IAAI;EAClB,OAAOF,UAAU,CAACE,IAAI,IAAI,EAAE,CAAC;AAC/B,CAAC;AACD,MAAMc,gBAAgB,GAAGb,SAAS,IAAII,MAAM,IAAI;EAC9C,MAAM;IACJU,MAAM;IACNT,IAAI;IACJC,UAAU;IACVC;EACF,CAAC,GAAGH,MAAM;EACV,OAAOW,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACN,MAAM,CAACS,QAAQ,IAAI;IAC5C,MAAMC,MAAM,GAAGlB,SAAS,KAAK,GAAG,GAAGc,MAAM,CAACG,QAAQ,CAAC,CAACE,OAAO,GAAGL,MAAM,CAACG,QAAQ,CAAC,CAACG,OAAO;IACtF,OAAOF,MAAM,KAAKb,IAAI,CAACK,EAAE,IAAIH,aAAa,IAAIW,MAAM,KAAKG,SAAS;EACpE,CAAC,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEN,QAAQ,KAAK;IAC3B,MAAM;MACJO;IACF,CAAC,GAAGV,MAAM,CAACG,QAAQ,CAAC;IACpB,MAAMT,MAAM,GAAGF,UAAU,GAAG;MAC1BG,aAAa,EAAEJ,IAAI,CAACK,EAAE;MACtBH,aAAa;MACbkB,aAAa,EAAEX,MAAM,CAACG,QAAQ,CAAC,CAACE,OAAO;MACvCO,aAAa,EAAEZ,MAAM,CAACG,QAAQ,CAAC,CAACG;IAClC,CAAC,CAAC;IACF,MAAM,CAACO,SAAS,EAAEC,SAAS,CAAC,GAAGJ,WAAW,EAAEF,MAAM,CAAC,CAACO,SAAS,EAAEC,MAAM,EAAEC,KAAK,KAAK;MAC/E,IAAIvB,MAAM,KAAK,CAACA,MAAM,CAACV,YAAY,CAACgC,MAAM,CAAC,CAAC,CAAC,EAAE9B,SAAS,CAAC,EAAE+B,KAAK,CAAC,IAAI,CAACvB,MAAM,CAACV,YAAY,CAACgC,MAAM,CAAC,CAAC,CAAC,EAAE9B,SAAS,CAAC,EAAE+B,KAAK,CAAC,CAAC,EAAE;QACxH,OAAOF,SAAS;MAClB;MACA,OAAO,CAACG,IAAI,CAACC,GAAG,CAAC,GAAGH,MAAM,EAAED,SAAS,CAAC,CAAC,CAAC,CAAC,EAAEG,IAAI,CAACE,GAAG,CAAC,GAAGJ,MAAM,EAAED,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC,EAAE,CAACM,QAAQ,EAAE,CAACA,QAAQ,CAAC,CAAC,IAAI,CAACA,QAAQ,EAAE,CAACA,QAAQ,CAAC;IAClD,OAAO,CAACH,IAAI,CAACC,GAAG,CAACN,SAAS,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,EAAES,IAAI,CAACE,GAAG,CAACN,SAAS,EAAEL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACnE,CAAC,EAAE,CAACY,QAAQ,EAAE,CAACA,QAAQ,CAAC,CAAC;AAC3B,CAAC;AACD,OAAO,MAAMC,YAAY,GAAGhC,MAAM,IAAI;EACpC;EACA;EACA,MAAMiC,YAAY,GAAGtB,MAAM,CAACC,IAAI,CAACZ,MAAM,CAACU,MAAM,CAAC,CAACwB,IAAI,CAACrB,QAAQ,IAAIb,MAAM,CAACU,MAAM,CAACG,QAAQ,CAAC,CAACsB,MAAM,KAAK,YAAY,CAAC;EACjH,IAAIF,YAAY,EAAE;IAChB,OAAOxB,gBAAgB,CAAC,GAAG,CAAC,CAACT,MAAM,CAAC;EACtC;EACA,OAAOD,eAAe,CAACC,MAAM,CAAC;AAChC,CAAC;AACD,OAAO,MAAMoC,YAAY,GAAGpC,MAAM,IAAI;EACpC,MAAMiC,YAAY,GAAGtB,MAAM,CAACC,IAAI,CAACZ,MAAM,CAACU,MAAM,CAAC,CAACwB,IAAI,CAACrB,QAAQ,IAAIb,MAAM,CAACU,MAAM,CAACG,QAAQ,CAAC,CAACsB,MAAM,KAAK,YAAY,CAAC;EACjH,IAAIF,YAAY,EAAE;IAChB,OAAOlC,eAAe,CAACC,MAAM,CAAC;EAChC;EACA,OAAOS,gBAAgB,CAAC,GAAG,CAAC,CAACT,MAAM,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}