{"ast":null,"code":"var _jsxFileName = \"/Users/vedachari/projects/weather-balloon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Map from './components/Map';\nimport Slider from './components/Slider';\nimport Meteo from './components/Meteo';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*basic flow\n- get hour 0 and display all\n- if user enters balloon/ generates random number: switch to single balloon\n- user can switch back to see all balloons at that time\n- hour changes using slider: stays consistent across time toggle */\n\nconst App = () => {\n  _s();\n  //states\n  const [allBalloons, setAllBalloons] = useState(true); //currently viewing all balloons?\n  //data\n  const [rand, setRand] = useState(null);\n  const randRef = useRef(rand);\n  const [data, setData] = useState(null); //all balloons\n  const [balloon, setBalloon] = useState(null);\n  const [hour, setHour] = useState(-1);\n\n  //change rand ref\n  useEffect(() => {\n    randRef.current = rand;\n  }, [rand]);\n\n  // Generate initial random number\n  useEffect(() => {\n    const r = Math.floor(Math.random() * 1000);\n    setHour(0);\n    setRand(r);\n  }, []);\n\n  // Log whenever rand changes\n  useEffect(() => {\n    if (allBalloons == true) {\n      setRand(null);\n    }\n    console.log(\"Random index chosen:\", rand);\n  }, [rand, allBalloons]);\n\n  // Handler for \"New Random Balloon\" button\n  const handleNewBalloon = () => {\n    // choose random balloon\n    const r = Math.floor(Math.random() * 1000);\n    if (data) {\n      setBalloon(data[r]);\n    }\n    ;\n    setRand(r);\n  };\n\n  // Handler for \"switch view\" button\n  const handleSwitchView = () => {\n    setAllBalloons(!allBalloons); //switch view\n  };\n\n  // Hour changed so get new balloon values\n  useEffect(() => {\n    const fetchBalloons = async () => {\n      try {\n        console.log(\"fetching hour %d\", hour);\n        const res = await fetch(`/api/treasure/get/${hour}`);\n        if (!res.ok) throw new Error(\"Failed to fetch data\");\n        const json = await res.json();\n\n        // convert API data to {lat, lon} format\n        const mapped = json.map(b => ({\n          lat: b[0],\n          lon: b[1],\n          alt: b[2]\n        }));\n        console.log(mapped[randRef.current]);\n        setData(mapped);\n        setBalloon(mapped[randRef.current]);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    if (randRef.current === null) {\n      console.log(\"rand not chosen\");\n      return;\n    } else {\n      fetchBalloons();\n    }\n    ;\n  }, [hour]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewBalloon,\n        className: \"generate-button\",\n        children: \"Show New Random Balloon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSwitchView,\n        className: \"generate-button\",\n        children: \"Toggle all Balloons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: !allBalloons && balloon && /*#__PURE__*/_jsxDEV(Map, {\n          lat: balloon.lat,\n          lon: balloon.lon,\n          alt: balloon.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        hour: hour,\n        setHour: setHour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), balloon && /*#__PURE__*/_jsxDEV(Meteo, {\n        lat: balloon.lat,\n        lon: balloon.lon,\n        hour: hour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yqt5CeQMCo2DWGQmfc6mlAbDMEk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Map","Slider","Meteo","jsxDEV","_jsxDEV","App","_s","allBalloons","setAllBalloons","rand","setRand","randRef","data","setData","balloon","setBalloon","hour","setHour","current","r","Math","floor","random","console","log","handleNewBalloon","handleSwitchView","fetchBalloons","res","fetch","ok","Error","json","mapped","map","b","lat","lon","alt","err","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vedachari/projects/weather-balloon/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Map from './components/Map';\nimport Slider from './components/Slider';\nimport Meteo from './components/Meteo';\nimport \"./App.css\";\n\ntype Balloon = {\n  lat: number;\n  lon: number;\n  alt: number;\n};\n\n/*basic flow\n- get hour 0 and display all\n- if user enters balloon/ generates random number: switch to single balloon\n- user can switch back to see all balloons at that time\n- hour changes using slider: stays consistent across time toggle */\n\nconst App: React.FC = () => {\n  //states\n  const [allBalloons, setAllBalloons] = useState<Boolean>(true); //currently viewing all balloons?\n  //data\n  const [rand, setRand] = useState<number | null>(null);\n  const randRef = useRef(rand);\n  const [data, setData] = useState<Balloon[] | null> (null); //all balloons\n  const [balloon, setBalloon] = useState<Balloon|null>(null);\n  const [hour, setHour] = useState< number>(-1);\n\n  //change rand ref\n  useEffect(() => {\n    randRef.current = rand;\n  }, [rand]);\n\n  // Generate initial random number\n  useEffect(() => {\n    const r = Math.floor(Math.random() * 1000);\n    setHour(0);\n    setRand(r);\n  }, []);\n\n  // Log whenever rand changes\n  useEffect(() => {\n    if(allBalloons == true){\n      setRand(null);\n    }\n    console.log(\"Random index chosen:\", rand);\n  }, [rand, allBalloons]);\n\n  // Handler for \"New Random Balloon\" button\n  const handleNewBalloon = () => {\n    // choose random balloon\n    const r = Math.floor(Math.random() * 1000);\n    if (data){\n      setBalloon(data[r]);\n    };\n    setRand(r);\n  };\n\n  // Handler for \"switch view\" button\n  const handleSwitchView = () => {\n    setAllBalloons(!allBalloons); //switch view\n  };\n\n\n  // Hour changed so get new balloon values\n  useEffect(() => {\n      const fetchBalloons = async () => {\n        try {\n          console.log(\"fetching hour %d\", hour);\n          const res = await fetch(`/api/treasure/get/${hour}`);\n          if (!res.ok) throw new Error(\"Failed to fetch data\");\n  \n          const json = await res.json();\n  \n          // convert API data to {lat, lon} format\n          const mapped = json.map((b: any) => ({\n            lat: b[0],\n            lon: b[1],\n            alt: b[2],\n          }));\n          console.log(mapped[randRef.current!]);\n\n          setData(mapped);\n          setBalloon(mapped[randRef.current!]);\n        } catch (err) {\n          console.error(err);\n        }\n      };\n      if (randRef.current === null){\n          console.log(\"rand not chosen\");\n          return;\n      }else{\n        fetchBalloons();\n      };\n    }, [hour]);\n\n  return (\n    <div className=\"page\">\n      {/* Button at the top */}\n      <div className=\"button\">\n        <button onClick={handleNewBalloon} className=\"generate-button\">\n          Show New Random Balloon\n        </button>\n        <button onClick={handleSwitchView} className=\"generate-button\">\n          Toggle all Balloons\n        </button>\n      </div>\n\n      {/* Map container */}\n      <div className=\"map-container\">\n          <div className=\"map\">\n            {!allBalloons &&balloon && (<Map lat = {balloon.lat} lon = {balloon.lon} alt = {balloon.alt} />)}\n          </div>\n          \n      </div>\n      <div className=\"slider\">\n            <Slider \n              hour = {hour}\n              setHour = {setHour}/>\n          </div>\n        <div className=\"info-container\">\n          <h1>Weather Info</h1>\n          {balloon && (<Meteo lat = {balloon.lat} lon = {balloon.lon} hour = {hour}/>)}\n        </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}