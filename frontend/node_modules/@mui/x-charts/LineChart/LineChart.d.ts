import * as React from 'react';
import { MakeOptional } from '@mui/x-internals/types/index.js';
import { ChartsSlots, ChartsSlotProps } from "@mui/x-charts/internals/material/index.js";
import { AreaPlotProps, AreaPlotSlotProps, AreaPlotSlots } from "@mui/x-charts/LineChart/AreaPlot.js";
import { LinePlotProps, LinePlotSlotProps, LinePlotSlots } from "@mui/x-charts/LineChart/LinePlot.js";
import { ChartContainerProps } from "@mui/x-charts/ChartContainer/index.js";
import { MarkPlotProps, MarkPlotSlotProps, MarkPlotSlots } from "@mui/x-charts/LineChart/MarkPlot.js";
import { ChartsAxisProps } from "@mui/x-charts/ChartsAxis/ChartsAxis.js";
import { LineSeriesType } from "@mui/x-charts/models/seriesType/line.js";
import { ChartsTooltipSlots, ChartsTooltipSlotProps } from "@mui/x-charts/ChartsTooltip/ChartTooltip.types.js";
import { ChartsLegendSlotProps, ChartsLegendSlots } from "@mui/x-charts/ChartsLegend/index.js";
import { ChartsAxisHighlightProps } from "@mui/x-charts/ChartsAxisHighlight/index.js";
import { ChartsAxisSlotProps, ChartsAxisSlots } from "@mui/x-charts/models/axis.js";
import { LineHighlightPlotSlots, LineHighlightPlotSlotProps } from "@mui/x-charts/LineChart/LineHighlightPlot.js";
import { ChartsGridProps } from "@mui/x-charts/ChartsGrid/index.js";
import { ChartsOverlayProps, ChartsOverlaySlotProps, ChartsOverlaySlots } from "@mui/x-charts/ChartsOverlay/index.js";
import { LineChartPluginSignatures } from "@mui/x-charts/LineChart/LineChart.plugins.js";
import { ChartsToolbarSlots, ChartsToolbarSlotProps } from "@mui/x-charts/Toolbar/index.js";
export interface LineChartSlots extends ChartsAxisSlots, AreaPlotSlots, LinePlotSlots, MarkPlotSlots, LineHighlightPlotSlots, ChartsLegendSlots, ChartsOverlaySlots, ChartsTooltipSlots, ChartsToolbarSlots, Partial<ChartsSlots> {}
export interface LineChartSlotProps extends ChartsAxisSlotProps, AreaPlotSlotProps, LinePlotSlotProps, MarkPlotSlotProps, LineHighlightPlotSlotProps, ChartsLegendSlotProps, ChartsOverlaySlotProps, ChartsTooltipSlotProps, ChartsToolbarSlotProps, Partial<ChartsSlotProps> {}
export type LineSeries = MakeOptional<LineSeriesType, 'type'>;
export interface LineChartProps extends Omit<ChartContainerProps<'line', LineChartPluginSignatures>, 'series' | 'plugins' | 'zAxis'>, Omit<ChartsAxisProps, 'slots' | 'slotProps'>, Omit<ChartsOverlayProps, 'slots' | 'slotProps'> {
  /**
   * The series to display in the line chart.
   * An array of [[LineSeries]] objects.
   */
  series: Readonly<LineSeries[]>;
  /**
   * Option to display a cartesian grid in the background.
   */
  grid?: Pick<ChartsGridProps, 'vertical' | 'horizontal'>;
  /**
   * The configuration of axes highlight.
   * @see See {@link https://mui.com/x/react-charts/highlighting/ highlighting docs} for more details.
   * @default { x: 'line' }
   */
  axisHighlight?: ChartsAxisHighlightProps;
  /**
   * If `true`, the legend is not rendered.
   */
  hideLegend?: boolean;
  /**
   * If `true`, render the line highlight item.
   */
  disableLineItemHighlight?: boolean;
  /**
   * Overridable component slots.
   * @default {}
   */
  slots?: LineChartSlots;
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps?: LineChartSlotProps;
  /**
   * Callback fired when an area element is clicked.
   */
  onAreaClick?: AreaPlotProps['onItemClick'];
  /**
   * Callback fired when a line element is clicked.
   */
  onLineClick?: LinePlotProps['onItemClick'];
  /**
   * Callback fired when a mark element is clicked.
   */
  onMarkClick?: MarkPlotProps['onItemClick'];
  /**
   * If `true`, animations are skipped.
   * @default false
   */
  skipAnimation?: boolean;
  /**
   * If true, shows the default chart toolbar.
   * @default false
   */
  showToolbar?: boolean;
}
/**
 * Demos:
 *
 * - [Lines](https://mui.com/x/react-charts/lines/)
 * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)
 *
 * API:
 *
 * - [LineChart API](https://mui.com/x/api/charts/line-chart/)
 */
declare const LineChart: React.ForwardRefExoticComponent<LineChartProps & React.RefAttributes<SVGSVGElement>>;
export { LineChart };