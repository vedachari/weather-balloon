{"ast":null,"code":"export class ChartStore {\n  constructor(value) {\n    this.value = value;\n    this.listeners = new Set();\n  }\n  subscribe = fn => {\n    this.listeners.add(fn);\n    return () => {\n      this.listeners.delete(fn);\n    };\n  };\n  getSnapshot = () => {\n    return this.value;\n  };\n  update = updater => {\n    const newState = updater(this.value);\n    if (newState !== this.value) {\n      this.value = newState;\n      this.listeners.forEach(l => l(newState));\n    }\n  };\n}","map":{"version":3,"names":["ChartStore","constructor","value","listeners","Set","subscribe","fn","add","delete","getSnapshot","update","updater","newState","forEach","l"],"sources":["/Users/vedachari/projects/weather-balloon/node_modules/@mui/x-charts/esm/internals/plugins/utils/ChartStore.js"],"sourcesContent":["export class ChartStore {\n  constructor(value) {\n    this.value = value;\n    this.listeners = new Set();\n  }\n  subscribe = fn => {\n    this.listeners.add(fn);\n    return () => {\n      this.listeners.delete(fn);\n    };\n  };\n  getSnapshot = () => {\n    return this.value;\n  };\n  update = updater => {\n    const newState = updater(this.value);\n    if (newState !== this.value) {\n      this.value = newState;\n      this.listeners.forEach(l => l(newState));\n    }\n  };\n}"],"mappings":"AAAA,OAAO,MAAMA,UAAU,CAAC;EACtBC,WAAWA,CAACC,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC5B;EACAC,SAAS,GAAGC,EAAE,IAAI;IAChB,IAAI,CAACH,SAAS,CAACI,GAAG,CAACD,EAAE,CAAC;IACtB,OAAO,MAAM;MACX,IAAI,CAACH,SAAS,CAACK,MAAM,CAACF,EAAE,CAAC;IAC3B,CAAC;EACH,CAAC;EACDG,WAAW,GAAGA,CAAA,KAAM;IAClB,OAAO,IAAI,CAACP,KAAK;EACnB,CAAC;EACDQ,MAAM,GAAGC,OAAO,IAAI;IAClB,MAAMC,QAAQ,GAAGD,OAAO,CAAC,IAAI,CAACT,KAAK,CAAC;IACpC,IAAIU,QAAQ,KAAK,IAAI,CAACV,KAAK,EAAE;MAC3B,IAAI,CAACA,KAAK,GAAGU,QAAQ;MACrB,IAAI,CAACT,SAAS,CAACU,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACF,QAAQ,CAAC,CAAC;IAC1C;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}